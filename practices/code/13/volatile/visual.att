
visual:     formato del fichero elf64-x86-64


Desensamblado de la secci贸n .init:

0000000000000980 <_init>:
 980:	48 83 ec 08          	sub    $0x8,%rsp
 984:	48 8b 05 65 16 20 00 	mov    0x201665(%rip),%rax        # 201ff0 <__gmon_start__>
 98b:	48 85 c0             	test   %rax,%rax
 98e:	74 02                	je     992 <_init+0x12>
 990:	ff d0                	callq  *%rax
 992:	48 83 c4 08          	add    $0x8,%rsp
 996:	c3                   	retq   

Desensamblado de la secci贸n .plt:

00000000000009a0 <.plt>:
 9a0:	ff 35 62 16 20 00    	pushq  0x201662(%rip)        # 202008 <_GLOBAL_OFFSET_TABLE_+0x8>
 9a6:	ff 25 64 16 20 00    	jmpq   *0x201664(%rip)        # 202010 <_GLOBAL_OFFSET_TABLE_+0x10>
 9ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000009b0 <std::ostream::put(char)@plt>:
 9b0:	ff 25 62 16 20 00    	jmpq   *0x201662(%rip)        # 202018 <std::ostream::put(char)@GLIBCXX_3.4>
 9b6:	68 00 00 00 00       	pushq  $0x0
 9bb:	e9 e0 ff ff ff       	jmpq   9a0 <.plt>

00000000000009c0 <std::ostream::flush()@plt>:
 9c0:	ff 25 5a 16 20 00    	jmpq   *0x20165a(%rip)        # 202020 <std::ostream::flush()@GLIBCXX_3.4>
 9c6:	68 01 00 00 00       	pushq  $0x1
 9cb:	e9 d0 ff ff ff       	jmpq   9a0 <.plt>

00000000000009d0 <__cxa_atexit@plt>:
 9d0:	ff 25 52 16 20 00    	jmpq   *0x201652(%rip)        # 202028 <__cxa_atexit@GLIBC_2.2.5>
 9d6:	68 02 00 00 00       	pushq  $0x2
 9db:	e9 c0 ff ff ff       	jmpq   9a0 <.plt>

00000000000009e0 <operator new(unsigned long)@plt>:
 9e0:	ff 25 4a 16 20 00    	jmpq   *0x20164a(%rip)        # 202030 <operator new(unsigned long)@GLIBCXX_3.4>
 9e6:	68 03 00 00 00       	pushq  $0x3
 9eb:	e9 b0 ff ff ff       	jmpq   9a0 <.plt>

00000000000009f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
 9f0:	ff 25 42 16 20 00    	jmpq   *0x201642(%rip)        # 202038 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
 9f6:	68 04 00 00 00       	pushq  $0x4
 9fb:	e9 a0 ff ff ff       	jmpq   9a0 <.plt>

0000000000000a00 <std::ctype<char>::_M_widen_init() const@plt>:
 a00:	ff 25 3a 16 20 00    	jmpq   *0x20163a(%rip)        # 202040 <std::ctype<char>::_M_widen_init() const@GLIBCXX_3.4.11>
 a06:	68 05 00 00 00       	pushq  $0x5
 a0b:	e9 90 ff ff ff       	jmpq   9a0 <.plt>

0000000000000a10 <std::__throw_bad_cast()@plt>:
 a10:	ff 25 32 16 20 00    	jmpq   *0x201632(%rip)        # 202048 <std::__throw_bad_cast()@GLIBCXX_3.4>
 a16:	68 06 00 00 00       	pushq  $0x6
 a1b:	e9 80 ff ff ff       	jmpq   9a0 <.plt>

0000000000000a20 <std::ios_base::Init::Init()@plt>:
 a20:	ff 25 2a 16 20 00    	jmpq   *0x20162a(%rip)        # 202050 <std::ios_base::Init::Init()@GLIBCXX_3.4>
 a26:	68 07 00 00 00       	pushq  $0x7
 a2b:	e9 70 ff ff ff       	jmpq   9a0 <.plt>

0000000000000a30 <std::ostream::operator<<(int)@plt>:
 a30:	ff 25 22 16 20 00    	jmpq   *0x201622(%rip)        # 202058 <std::ostream::operator<<(int)@GLIBCXX_3.4>
 a36:	68 08 00 00 00       	pushq  $0x8
 a3b:	e9 60 ff ff ff       	jmpq   9a0 <.plt>

Desensamblado de la secci贸n .plt.got:

0000000000000a40 <.plt.got>:
 a40:	ff 25 82 15 20 00    	jmpq   *0x201582(%rip)        # 201fc8 <__cxa_finalize@GLIBC_2.2.5>
 a46:	66 90                	xchg   %ax,%ax

Desensamblado de la secci贸n .text:

0000000000000a50 <main>:
     a50:	41 57                	push   %r15
     a52:	41 56                	push   %r14
     a54:	41 55                	push   %r13
     a56:	41 54                	push   %r12
     a58:	55                   	push   %rbp
     a59:	48 8d 2d 20 16 20 00 	lea    0x201620(%rip),%rbp        # 202080 <std::cout@@GLIBCXX_3.4>
     a60:	53                   	push   %rbx
     a61:	31 db                	xor    %ebx,%ebx
     a63:	48 83 ec 38          	sub    $0x38,%rsp
     a67:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
     a6e:	00 00 
     a70:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
     a75:	48 89 04 24          	mov    %rax,(%rsp)
     a79:	48 8d 44 24 21       	lea    0x21(%rsp),%rax
     a7e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
     a83:	48 8d 44 24 22       	lea    0x22(%rsp),%rax
     a88:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
     a8d:	48 8d 44 24 23       	lea    0x23(%rsp),%rax
     a92:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     a97:	eb 2f                	jmp    ac8 <main+0x78>
     a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     aa0:	41 0f b6 47 43       	movzbl 0x43(%r15),%eax
     aa5:	0f be f0             	movsbl %al,%esi
     aa8:	48 8d 3d d1 15 20 00 	lea    0x2015d1(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     aaf:	83 c3 01             	add    $0x1,%ebx
     ab2:	e8 f9 fe ff ff       	callq  9b0 <std::ostream::put(char)@plt>
     ab7:	48 89 c7             	mov    %rax,%rdi
     aba:	e8 01 ff ff ff       	callq  9c0 <std::ostream::flush()@plt>
     abf:	83 fb 0a             	cmp    $0xa,%ebx
     ac2:	0f 84 98 01 00 00    	je     c60 <main+0x210>
     ac8:	bf 10 00 00 00       	mov    $0x10,%edi
     acd:	e8 0e ff ff ff       	callq  9e0 <operator new(unsigned long)@plt>
     ad2:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
     ad7:	48 8d 35 26 08 00 00 	lea    0x826(%rip),%rsi        # 1304 <_IO_stdin_used+0x4>
     ade:	48 8d 3d 9b 15 20 00 	lea    0x20159b(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     ae5:	89 58 08             	mov    %ebx,0x8(%rax)
     ae8:	48 89 10             	mov    %rdx,(%rax)
     aeb:	ba 04 00 00 00       	mov    $0x4,%edx
     af0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     af5:	e8 f6 fe ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     afa:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
     aff:	4d 85 ff             	test   %r15,%r15
     b02:	0f 84 f9 00 00 00    	je     c01 <main+0x1b1>
     b08:	49 8b 07             	mov    (%r15),%rax
     b0b:	41 8b 77 08          	mov    0x8(%r15),%esi
     b0f:	48 8d 3d 6a 15 20 00 	lea    0x20156a(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     b16:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     b1b:	e8 10 ff ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     b20:	48 8b 34 24          	mov    (%rsp),%rsi
     b24:	ba 01 00 00 00       	mov    $0x1,%edx
     b29:	c6 44 24 20 20       	movb   $0x20,0x20(%rsp)
     b2e:	48 89 c7             	mov    %rax,%rdi
     b31:	e8 ba fe ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     b36:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
     b3b:	4d 85 f6             	test   %r14,%r14
     b3e:	0f 84 b5 00 00 00    	je     bf9 <main+0x1a9>
     b44:	49 8b 16             	mov    (%r14),%rdx
     b47:	41 8b 76 08          	mov    0x8(%r14),%esi
     b4b:	48 89 c7             	mov    %rax,%rdi
     b4e:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     b53:	e8 d8 fe ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     b58:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
     b5d:	ba 01 00 00 00       	mov    $0x1,%edx
     b62:	c6 44 24 21 20       	movb   $0x20,0x21(%rsp)
     b67:	48 89 c7             	mov    %rax,%rdi
     b6a:	e8 81 fe ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     b6f:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
     b74:	4d 85 ed             	test   %r13,%r13
     b77:	74 7d                	je     bf6 <main+0x1a6>
     b79:	49 8b 55 00          	mov    0x0(%r13),%rdx
     b7d:	41 8b 75 08          	mov    0x8(%r13),%esi
     b81:	48 89 c7             	mov    %rax,%rdi
     b84:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     b89:	e8 a2 fe ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     b8e:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
     b93:	ba 01 00 00 00       	mov    $0x1,%edx
     b98:	c6 44 24 22 20       	movb   $0x20,0x22(%rsp)
     b9d:	48 89 c7             	mov    %rax,%rdi
     ba0:	e8 4b fe ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     ba5:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
     baa:	4d 85 e4             	test   %r12,%r12
     bad:	74 43                	je     bf2 <main+0x1a2>
     baf:	49 8b 14 24          	mov    (%r12),%rdx
     bb3:	41 8b 74 24 08       	mov    0x8(%r12),%esi
     bb8:	48 89 c7             	mov    %rax,%rdi
     bbb:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     bc0:	e8 6b fe ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     bc5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
     bca:	ba 01 00 00 00       	mov    $0x1,%edx
     bcf:	c6 44 24 23 20       	movb   $0x20,0x23(%rsp)
     bd4:	48 89 c7             	mov    %rax,%rdi
     bd7:	e8 14 fe ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     bdc:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
     be1:	48 89 c7             	mov    %rax,%rdi
     be4:	e8 e7 03 00 00       	callq  fd0 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)>
     be9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     bee:	49 89 04 24          	mov    %rax,(%r12)
     bf2:	4d 89 65 00          	mov    %r12,0x0(%r13)
     bf6:	4d 89 2e             	mov    %r13,(%r14)
     bf9:	4d 89 37             	mov    %r14,(%r15)
     bfc:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
     c01:	48 8b 45 00          	mov    0x0(%rbp),%rax
     c05:	48 8b 40 e8          	mov    -0x18(%rax),%rax
     c09:	4c 8b bc 05 f0 00 00 	mov    0xf0(%rbp,%rax,1),%r15
     c10:	00 
     c11:	4d 85 ff             	test   %r15,%r15
     c14:	0f 84 3d 02 00 00    	je     e57 <main+0x407>
     c1a:	41 80 7f 38 00       	cmpb   $0x0,0x38(%r15)
     c1f:	0f 85 7b fe ff ff    	jne    aa0 <main+0x50>
     c25:	4c 89 ff             	mov    %r15,%rdi
     c28:	e8 d3 fd ff ff       	callq  a00 <std::ctype<char>::_M_widen_init() const@plt>
     c2d:	49 8b 17             	mov    (%r15),%rdx
     c30:	be 0a 00 00 00       	mov    $0xa,%esi
     c35:	4c 89 ff             	mov    %r15,%rdi
     c38:	48 8d 0d 81 03 00 00 	lea    0x381(%rip),%rcx        # fc0 <std::ctype<char>::do_widen(char) const>
     c3f:	48 8b 52 30          	mov    0x30(%rdx),%rdx
     c43:	48 39 ca             	cmp    %rcx,%rdx
     c46:	0f 85 04 02 00 00    	jne    e50 <main+0x400>
     c4c:	e8 6f 03 00 00       	callq  fc0 <std::ctype<char>::do_widen(char) const>
     c51:	e9 4f fe ff ff       	jmpq   aa5 <main+0x55>
     c56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     c5d:	00 00 00 
     c60:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     c65:	48 85 c0             	test   %rax,%rax
     c68:	0f 84 c2 01 00 00    	je     e30 <main+0x3e0>
     c6e:	48 8d 4c 24 25       	lea    0x25(%rsp),%rcx
     c73:	4c 8d 64 24 24       	lea    0x24(%rsp),%r12
     c78:	48 89 0c 24          	mov    %rcx,(%rsp)
     c7c:	48 8d 4c 24 26       	lea    0x26(%rsp),%rcx
     c81:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
     c86:	48 8d 4c 24 27       	lea    0x27(%rsp),%rcx
     c8b:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
     c90:	eb 2f                	jmp    cc1 <main+0x271>
     c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     c98:	0f b6 43 43          	movzbl 0x43(%rbx),%eax
     c9c:	0f be f0             	movsbl %al,%esi
     c9f:	48 8d 3d da 13 20 00 	lea    0x2013da(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     ca6:	e8 05 fd ff ff       	callq  9b0 <std::ostream::put(char)@plt>
     cab:	48 89 c7             	mov    %rax,%rdi
     cae:	e8 0d fd ff ff       	callq  9c0 <std::ostream::flush()@plt>
     cb3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     cb8:	48 85 c0             	test   %rax,%rax
     cbb:	0f 84 6f 01 00 00    	je     e30 <main+0x3e0>
     cc1:	48 8b 00             	mov    (%rax),%rax
     cc4:	ba 04 00 00 00       	mov    $0x4,%edx
     cc9:	48 8d 35 34 06 00 00 	lea    0x634(%rip),%rsi        # 1304 <_IO_stdin_used+0x4>
     cd0:	48 8d 3d a9 13 20 00 	lea    0x2013a9(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     cd7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     cdc:	e8 0f fd ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     ce1:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
     ce6:	48 85 db             	test   %rbx,%rbx
     ce9:	0f 84 f3 00 00 00    	je     de2 <main+0x392>
     cef:	48 8b 03             	mov    (%rbx),%rax
     cf2:	8b 73 08             	mov    0x8(%rbx),%esi
     cf5:	48 8d 3d 84 13 20 00 	lea    0x201384(%rip),%rdi        # 202080 <std::cout@@GLIBCXX_3.4>
     cfc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
     d01:	e8 2a fd ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     d06:	ba 01 00 00 00       	mov    $0x1,%edx
     d0b:	4c 89 e6             	mov    %r12,%rsi
     d0e:	c6 44 24 24 20       	movb   $0x20,0x24(%rsp)
     d13:	48 89 c7             	mov    %rax,%rdi
     d16:	e8 d5 fc ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     d1b:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
     d20:	4d 85 ff             	test   %r15,%r15
     d23:	0f 84 b1 00 00 00    	je     dda <main+0x38a>
     d29:	49 8b 17             	mov    (%r15),%rdx
     d2c:	41 8b 77 08          	mov    0x8(%r15),%esi
     d30:	48 89 c7             	mov    %rax,%rdi
     d33:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     d38:	e8 f3 fc ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     d3d:	48 8b 34 24          	mov    (%rsp),%rsi
     d41:	ba 01 00 00 00       	mov    $0x1,%edx
     d46:	c6 44 24 25 20       	movb   $0x20,0x25(%rsp)
     d4b:	48 89 c7             	mov    %rax,%rdi
     d4e:	e8 9d fc ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     d53:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
     d58:	4d 85 f6             	test   %r14,%r14
     d5b:	74 7a                	je     dd7 <main+0x387>
     d5d:	49 8b 16             	mov    (%r14),%rdx
     d60:	41 8b 76 08          	mov    0x8(%r14),%esi
     d64:	48 89 c7             	mov    %rax,%rdi
     d67:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     d6c:	e8 bf fc ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     d71:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
     d76:	ba 01 00 00 00       	mov    $0x1,%edx
     d7b:	c6 44 24 26 20       	movb   $0x20,0x26(%rsp)
     d80:	48 89 c7             	mov    %rax,%rdi
     d83:	e8 68 fc ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     d88:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
     d8d:	4d 85 ed             	test   %r13,%r13
     d90:	74 42                	je     dd4 <main+0x384>
     d92:	49 8b 55 00          	mov    0x0(%r13),%rdx
     d96:	41 8b 75 08          	mov    0x8(%r13),%esi
     d9a:	48 89 c7             	mov    %rax,%rdi
     d9d:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
     da2:	e8 89 fc ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     da7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
     dac:	ba 01 00 00 00       	mov    $0x1,%edx
     db1:	c6 44 24 27 20       	movb   $0x20,0x27(%rsp)
     db6:	48 89 c7             	mov    %rax,%rdi
     db9:	e8 32 fc ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
     dbe:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
     dc3:	48 89 c7             	mov    %rax,%rdi
     dc6:	e8 05 02 00 00       	callq  fd0 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)>
     dcb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
     dd0:	49 89 45 00          	mov    %rax,0x0(%r13)
     dd4:	4d 89 2e             	mov    %r13,(%r14)
     dd7:	4d 89 37             	mov    %r14,(%r15)
     dda:	4c 89 3b             	mov    %r15,(%rbx)
     ddd:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
     de2:	48 8b 45 00          	mov    0x0(%rbp),%rax
     de6:	48 8b 40 e8          	mov    -0x18(%rax),%rax
     dea:	48 8b 9c 05 f0 00 00 	mov    0xf0(%rbp,%rax,1),%rbx
     df1:	00 
     df2:	48 85 db             	test   %rbx,%rbx
     df5:	74 60                	je     e57 <main+0x407>
     df7:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
     dfb:	0f 85 97 fe ff ff    	jne    c98 <main+0x248>
     e01:	48 89 df             	mov    %rbx,%rdi
     e04:	e8 f7 fb ff ff       	callq  a00 <std::ctype<char>::_M_widen_init() const@plt>
     e09:	48 8b 03             	mov    (%rbx),%rax
     e0c:	be 0a 00 00 00       	mov    $0xa,%esi
     e11:	48 89 df             	mov    %rbx,%rdi
     e14:	48 8d 15 a5 01 00 00 	lea    0x1a5(%rip),%rdx        # fc0 <std::ctype<char>::do_widen(char) const>
     e1b:	48 8b 40 30          	mov    0x30(%rax),%rax
     e1f:	48 39 d0             	cmp    %rdx,%rax
     e22:	75 24                	jne    e48 <main+0x3f8>
     e24:	e8 97 01 00 00       	callq  fc0 <std::ctype<char>::do_widen(char) const>
     e29:	e9 6e fe ff ff       	jmpq   c9c <main+0x24c>
     e2e:	66 90                	xchg   %ax,%ax
     e30:	48 83 c4 38          	add    $0x38,%rsp
     e34:	31 c0                	xor    %eax,%eax
     e36:	5b                   	pop    %rbx
     e37:	5d                   	pop    %rbp
     e38:	41 5c                	pop    %r12
     e3a:	41 5d                	pop    %r13
     e3c:	41 5e                	pop    %r14
     e3e:	41 5f                	pop    %r15
     e40:	c3                   	retq   
     e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     e48:	ff d0                	callq  *%rax
     e4a:	e9 4d fe ff ff       	jmpq   c9c <main+0x24c>
     e4f:	90                   	nop
     e50:	ff d2                	callq  *%rdx
     e52:	e9 4e fc ff ff       	jmpq   aa5 <main+0x55>
     e57:	e8 b4 fb ff ff       	callq  a10 <std::__throw_bad_cast()@plt>
     e5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000e60 <_GLOBAL__sub_I_main>:
     e60:	48 83 ec 08          	sub    $0x8,%rsp
     e64:	48 8d 3d 26 13 20 00 	lea    0x201326(%rip),%rdi        # 202191 <std::__ioinit>
     e6b:	e8 b0 fb ff ff       	callq  a20 <std::ios_base::Init::Init()@plt>
     e70:	48 8b 3d 81 11 20 00 	mov    0x201181(%rip),%rdi        # 201ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
     e77:	48 83 c4 08          	add    $0x8,%rsp
     e7b:	48 8d 15 e6 11 20 00 	lea    0x2011e6(%rip),%rdx        # 202068 <__dso_handle>
     e82:	48 8d 35 08 13 20 00 	lea    0x201308(%rip),%rsi        # 202191 <std::__ioinit>
     e89:	e9 42 fb ff ff       	jmpq   9d0 <__cxa_atexit@plt>
     e8e:	66 90                	xchg   %ax,%ax

0000000000000e90 <_start>:
     e90:	31 ed                	xor    %ebp,%ebp
     e92:	49 89 d1             	mov    %rdx,%r9
     e95:	5e                   	pop    %rsi
     e96:	48 89 e2             	mov    %rsp,%rdx
     e99:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     e9d:	50                   	push   %rax
     e9e:	54                   	push   %rsp
     e9f:	4c 8d 05 4a 04 00 00 	lea    0x44a(%rip),%r8        # 12f0 <__libc_csu_fini>
     ea6:	48 8d 0d d3 03 00 00 	lea    0x3d3(%rip),%rcx        # 1280 <__libc_csu_init>
     ead:	48 8d 3d 9c fb ff ff 	lea    -0x464(%rip),%rdi        # a50 <main>
     eb4:	ff 15 2e 11 20 00    	callq  *0x20112e(%rip)        # 201fe8 <__libc_start_main@GLIBC_2.2.5>
     eba:	f4                   	hlt    
     ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000ec0 <deregister_tm_clones>:
     ec0:	48 8d 3d a9 11 20 00 	lea    0x2011a9(%rip),%rdi        # 202070 <__TMC_LIST__>
     ec7:	48 8d 05 b9 11 20 00 	lea    0x2011b9(%rip),%rax        # 202087 <__TMC_END__+0x7>
     ece:	55                   	push   %rbp
     ecf:	48 29 f8             	sub    %rdi,%rax
     ed2:	48 89 e5             	mov    %rsp,%rbp
     ed5:	48 83 f8 0e          	cmp    $0xe,%rax
     ed9:	76 15                	jbe    ef0 <deregister_tm_clones+0x30>
     edb:	48 8b 05 ee 10 20 00 	mov    0x2010ee(%rip),%rax        # 201fd0 <_ITM_deregisterTMCloneTable@LIBITM_1.0>
     ee2:	48 85 c0             	test   %rax,%rax
     ee5:	74 09                	je     ef0 <deregister_tm_clones+0x30>
     ee7:	5d                   	pop    %rbp
     ee8:	ff e0                	jmpq   *%rax
     eea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     ef0:	5d                   	pop    %rbp
     ef1:	c3                   	retq   
     ef2:	0f 1f 40 00          	nopl   0x0(%rax)
     ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     efd:	00 00 00 

0000000000000f00 <register_tm_clones>:
     f00:	48 8d 3d 69 11 20 00 	lea    0x201169(%rip),%rdi        # 202070 <__TMC_LIST__>
     f07:	48 8d 35 72 11 20 00 	lea    0x201172(%rip),%rsi        # 202080 <std::cout@@GLIBCXX_3.4>
     f0e:	55                   	push   %rbp
     f0f:	48 29 fe             	sub    %rdi,%rsi
     f12:	48 89 e5             	mov    %rsp,%rbp
     f15:	48 c1 fe 03          	sar    $0x3,%rsi
     f19:	48 89 f0             	mov    %rsi,%rax
     f1c:	48 c1 e8 3f          	shr    $0x3f,%rax
     f20:	48 01 c6             	add    %rax,%rsi
     f23:	48 d1 fe             	sar    %rsi
     f26:	74 18                	je     f40 <register_tm_clones+0x40>
     f28:	48 8b 05 a9 10 20 00 	mov    0x2010a9(%rip),%rax        # 201fd8 <_ITM_registerTMCloneTable@LIBITM_1.0>
     f2f:	48 85 c0             	test   %rax,%rax
     f32:	74 0c                	je     f40 <register_tm_clones+0x40>
     f34:	5d                   	pop    %rbp
     f35:	ff e0                	jmpq   *%rax
     f37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     f3e:	00 00 
     f40:	5d                   	pop    %rbp
     f41:	c3                   	retq   
     f42:	0f 1f 40 00          	nopl   0x0(%rax)
     f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f4d:	00 00 00 

0000000000000f50 <__do_global_dtors_aux>:
     f50:	80 3d 39 12 20 00 00 	cmpb   $0x0,0x201239(%rip)        # 202190 <completed.6972>
     f57:	75 27                	jne    f80 <__do_global_dtors_aux+0x30>
     f59:	48 83 3d 67 10 20 00 	cmpq   $0x0,0x201067(%rip)        # 201fc8 <__cxa_finalize@GLIBC_2.2.5>
     f60:	00 
     f61:	55                   	push   %rbp
     f62:	48 89 e5             	mov    %rsp,%rbp
     f65:	74 0c                	je     f73 <__do_global_dtors_aux+0x23>
     f67:	48 8b 3d fa 10 20 00 	mov    0x2010fa(%rip),%rdi        # 202068 <__dso_handle>
     f6e:	e8 cd fa ff ff       	callq  a40 <.plt.got>
     f73:	e8 48 ff ff ff       	callq  ec0 <deregister_tm_clones>
     f78:	5d                   	pop    %rbp
     f79:	c6 05 10 12 20 00 01 	movb   $0x1,0x201210(%rip)        # 202190 <completed.6972>
     f80:	f3 c3                	repz retq 
     f82:	0f 1f 40 00          	nopl   0x0(%rax)
     f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f8d:	00 00 00 

0000000000000f90 <frame_dummy>:
     f90:	48 8d 3d e9 0d 20 00 	lea    0x200de9(%rip),%rdi        # 201d80 <__JCR_END__>
     f97:	48 83 3f 00          	cmpq   $0x0,(%rdi)
     f9b:	75 0b                	jne    fa8 <frame_dummy+0x18>
     f9d:	e9 5e ff ff ff       	jmpq   f00 <register_tm_clones>
     fa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     fa8:	48 8b 05 31 10 20 00 	mov    0x201031(%rip),%rax        # 201fe0 <_Jv_RegisterClasses>
     faf:	48 85 c0             	test   %rax,%rax
     fb2:	74 e9                	je     f9d <frame_dummy+0xd>
     fb4:	55                   	push   %rbp
     fb5:	48 89 e5             	mov    %rsp,%rbp
     fb8:	ff d0                	callq  *%rax
     fba:	5d                   	pop    %rbp
     fbb:	e9 40 ff ff ff       	jmpq   f00 <register_tm_clones>

0000000000000fc0 <std::ctype<char>::do_widen(char) const>:
     fc0:	89 f0                	mov    %esi,%eax
     fc2:	c3                   	retq   
     fc3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     fca:	00 00 00 
     fcd:	0f 1f 00             	nopl   (%rax)

0000000000000fd0 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)>:
     fd0:	41 57                	push   %r15
     fd2:	41 56                	push   %r14
     fd4:	49 89 fe             	mov    %rdi,%r14
     fd7:	41 55                	push   %r13
     fd9:	41 54                	push   %r12
     fdb:	55                   	push   %rbp
     fdc:	53                   	push   %rbx
     fdd:	48 83 ec 48          	sub    $0x48,%rsp
     fe1:	48 8b 2e             	mov    (%rsi),%rbp
     fe4:	48 85 ed             	test   %rbp,%rbp
     fe7:	0f 84 76 02 00 00    	je     1263 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x293>
     fed:	48 8b 45 00          	mov    0x0(%rbp),%rax
     ff1:	48 89 f3             	mov    %rsi,%rbx
     ff4:	48 89 06             	mov    %rax,(%rsi)
     ff7:	8b 75 08             	mov    0x8(%rbp),%esi
     ffa:	e8 31 fa ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
     fff:	48 8d 74 24 37       	lea    0x37(%rsp),%rsi
    1004:	ba 01 00 00 00       	mov    $0x1,%edx
    1009:	c6 44 24 37 20       	movb   $0x20,0x37(%rsp)
    100e:	48 89 c7             	mov    %rax,%rdi
    1011:	e8 da f9 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1016:	4c 8b 23             	mov    (%rbx),%r12
    1019:	4d 85 e4             	test   %r12,%r12
    101c:	0f 84 3a 02 00 00    	je     125c <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x28c>
    1022:	49 8b 14 24          	mov    (%r12),%rdx
    1026:	41 8b 74 24 08       	mov    0x8(%r12),%esi
    102b:	48 89 c7             	mov    %rax,%rdi
    102e:	48 89 13             	mov    %rdx,(%rbx)
    1031:	e8 fa f9 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    1036:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    103b:	ba 01 00 00 00       	mov    $0x1,%edx
    1040:	c6 44 24 38 20       	movb   $0x20,0x38(%rsp)
    1045:	48 89 c7             	mov    %rax,%rdi
    1048:	e8 a3 f9 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    104d:	4c 8b 2b             	mov    (%rbx),%r13
    1050:	4d 85 ed             	test   %r13,%r13
    1053:	0f 84 ff 01 00 00    	je     1258 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x288>
    1059:	49 8b 55 00          	mov    0x0(%r13),%rdx
    105d:	41 8b 75 08          	mov    0x8(%r13),%esi
    1061:	48 89 c7             	mov    %rax,%rdi
    1064:	48 89 13             	mov    %rdx,(%rbx)
    1067:	e8 c4 f9 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    106c:	48 8d 74 24 39       	lea    0x39(%rsp),%rsi
    1071:	ba 01 00 00 00       	mov    $0x1,%edx
    1076:	c6 44 24 39 20       	movb   $0x20,0x39(%rsp)
    107b:	48 89 c7             	mov    %rax,%rdi
    107e:	e8 6d f9 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1083:	4c 8b 3b             	mov    (%rbx),%r15
    1086:	4d 85 ff             	test   %r15,%r15
    1089:	0f 84 c5 01 00 00    	je     1254 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x284>
    108f:	49 8b 17             	mov    (%r15),%rdx
    1092:	41 8b 77 08          	mov    0x8(%r15),%esi
    1096:	48 89 c7             	mov    %rax,%rdi
    1099:	48 89 13             	mov    %rdx,(%rbx)
    109c:	e8 8f f9 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    10a1:	48 8d 74 24 3a       	lea    0x3a(%rsp),%rsi
    10a6:	ba 01 00 00 00       	mov    $0x1,%edx
    10ab:	c6 44 24 3a 20       	movb   $0x20,0x3a(%rsp)
    10b0:	48 89 c7             	mov    %rax,%rdi
    10b3:	e8 38 f9 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    10b8:	48 8b 0b             	mov    (%rbx),%rcx
    10bb:	48 85 c9             	test   %rcx,%rcx
    10be:	0f 84 8d 01 00 00    	je     1251 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x281>
    10c4:	48 8b 11             	mov    (%rcx),%rdx
    10c7:	8b 71 08             	mov    0x8(%rcx),%esi
    10ca:	48 89 c7             	mov    %rax,%rdi
    10cd:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    10d2:	48 89 13             	mov    %rdx,(%rbx)
    10d5:	e8 56 f9 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    10da:	48 8d 74 24 3b       	lea    0x3b(%rsp),%rsi
    10df:	ba 01 00 00 00       	mov    $0x1,%edx
    10e4:	c6 44 24 3b 20       	movb   $0x20,0x3b(%rsp)
    10e9:	48 89 c7             	mov    %rax,%rdi
    10ec:	e8 ff f8 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    10f1:	4c 8b 03             	mov    (%rbx),%r8
    10f4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    10f9:	4d 85 c0             	test   %r8,%r8
    10fc:	0f 84 4c 01 00 00    	je     124e <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x27e>
    1102:	49 8b 10             	mov    (%r8),%rdx
    1105:	41 8b 70 08          	mov    0x8(%r8),%esi
    1109:	48 89 c7             	mov    %rax,%rdi
    110c:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    1111:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    1116:	48 89 13             	mov    %rdx,(%rbx)
    1119:	e8 12 f9 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    111e:	48 8d 74 24 3c       	lea    0x3c(%rsp),%rsi
    1123:	ba 01 00 00 00       	mov    $0x1,%edx
    1128:	c6 44 24 3c 20       	movb   $0x20,0x3c(%rsp)
    112d:	48 89 c7             	mov    %rax,%rdi
    1130:	e8 bb f8 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    1135:	4c 8b 0b             	mov    (%rbx),%r9
    1138:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    113d:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    1142:	4d 85 c9             	test   %r9,%r9
    1145:	0f 84 00 01 00 00    	je     124b <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x27b>
    114b:	49 8b 11             	mov    (%r9),%rdx
    114e:	41 8b 71 08          	mov    0x8(%r9),%esi
    1152:	48 89 c7             	mov    %rax,%rdi
    1155:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    115a:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    115f:	48 89 13             	mov    %rdx,(%rbx)
    1162:	e8 c9 f8 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    1167:	48 8d 74 24 3d       	lea    0x3d(%rsp),%rsi
    116c:	ba 01 00 00 00       	mov    $0x1,%edx
    1171:	c6 44 24 3d 20       	movb   $0x20,0x3d(%rsp)
    1176:	48 89 c7             	mov    %rax,%rdi
    1179:	e8 72 f8 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    117e:	4c 8b 13             	mov    (%rbx),%r10
    1181:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    1186:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    118b:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    1190:	4d 85 d2             	test   %r10,%r10
    1193:	0f 84 af 00 00 00    	je     1248 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x278>
    1199:	49 8b 12             	mov    (%r10),%rdx
    119c:	41 8b 72 08          	mov    0x8(%r10),%esi
    11a0:	48 89 c7             	mov    %rax,%rdi
    11a3:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    11a8:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    11ad:	48 89 13             	mov    %rdx,(%rbx)
    11b0:	e8 7b f8 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    11b5:	48 8d 74 24 3e       	lea    0x3e(%rsp),%rsi
    11ba:	ba 01 00 00 00       	mov    $0x1,%edx
    11bf:	c6 44 24 3e 20       	movb   $0x20,0x3e(%rsp)
    11c4:	48 89 c7             	mov    %rax,%rdi
    11c7:	e8 24 f8 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    11cc:	4c 8b 1b             	mov    (%rbx),%r11
    11cf:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    11d4:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    11d9:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    11de:	4d 85 db             	test   %r11,%r11
    11e1:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    11e6:	74 5d                	je     1245 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)+0x275>
    11e8:	49 8b 13             	mov    (%r11),%rdx
    11eb:	41 8b 73 08          	mov    0x8(%r11),%esi
    11ef:	48 89 c7             	mov    %rax,%rdi
    11f2:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
    11f7:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    11fc:	48 89 13             	mov    %rdx,(%rbx)
    11ff:	e8 2c f8 ff ff       	callq  a30 <std::ostream::operator<<(int)@plt>
    1204:	48 8d 74 24 3f       	lea    0x3f(%rsp),%rsi
    1209:	ba 01 00 00 00       	mov    $0x1,%edx
    120e:	c6 44 24 3f 20       	movb   $0x20,0x3f(%rsp)
    1213:	48 89 c7             	mov    %rax,%rdi
    1216:	e8 d5 f7 ff ff       	callq  9f0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    121b:	48 89 de             	mov    %rbx,%rsi
    121e:	48 89 c7             	mov    %rax,%rdi
    1221:	e8 aa fd ff ff       	callq  fd0 <std::ostream& operator<< <int>(std::ostream&, stack<int>&)>
    1226:	48 8b 03             	mov    (%rbx),%rax
    1229:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    122e:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    1233:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    1238:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    123d:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    1242:	49 89 03             	mov    %rax,(%r11)
    1245:	4d 89 1a             	mov    %r11,(%r10)
    1248:	4d 89 11             	mov    %r10,(%r9)
    124b:	4d 89 08             	mov    %r9,(%r8)
    124e:	4c 89 01             	mov    %r8,(%rcx)
    1251:	49 89 0f             	mov    %rcx,(%r15)
    1254:	4d 89 7d 00          	mov    %r15,0x0(%r13)
    1258:	4d 89 2c 24          	mov    %r13,(%r12)
    125c:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    1260:	48 89 2b             	mov    %rbp,(%rbx)
    1263:	48 83 c4 48          	add    $0x48,%rsp
    1267:	4c 89 f0             	mov    %r14,%rax
    126a:	5b                   	pop    %rbx
    126b:	5d                   	pop    %rbp
    126c:	41 5c                	pop    %r12
    126e:	41 5d                	pop    %r13
    1270:	41 5e                	pop    %r14
    1272:	41 5f                	pop    %r15
    1274:	c3                   	retq   
    1275:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    127c:	00 00 00 
    127f:	90                   	nop

0000000000001280 <__libc_csu_init>:
    1280:	41 57                	push   %r15
    1282:	41 56                	push   %r14
    1284:	41 89 ff             	mov    %edi,%r15d
    1287:	41 55                	push   %r13
    1289:	41 54                	push   %r12
    128b:	4c 8d 25 d6 0a 20 00 	lea    0x200ad6(%rip),%r12        # 201d68 <__frame_dummy_init_array_entry>
    1292:	55                   	push   %rbp
    1293:	48 8d 2d de 0a 20 00 	lea    0x200ade(%rip),%rbp        # 201d78 <__init_array_end>
    129a:	53                   	push   %rbx
    129b:	49 89 f6             	mov    %rsi,%r14
    129e:	49 89 d5             	mov    %rdx,%r13
    12a1:	4c 29 e5             	sub    %r12,%rbp
    12a4:	48 83 ec 08          	sub    $0x8,%rsp
    12a8:	48 c1 fd 03          	sar    $0x3,%rbp
    12ac:	e8 cf f6 ff ff       	callq  980 <_init>
    12b1:	48 85 ed             	test   %rbp,%rbp
    12b4:	74 20                	je     12d6 <__libc_csu_init+0x56>
    12b6:	31 db                	xor    %ebx,%ebx
    12b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    12bf:	00 
    12c0:	4c 89 ea             	mov    %r13,%rdx
    12c3:	4c 89 f6             	mov    %r14,%rsi
    12c6:	44 89 ff             	mov    %r15d,%edi
    12c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    12cd:	48 83 c3 01          	add    $0x1,%rbx
    12d1:	48 39 dd             	cmp    %rbx,%rbp
    12d4:	75 ea                	jne    12c0 <__libc_csu_init+0x40>
    12d6:	48 83 c4 08          	add    $0x8,%rsp
    12da:	5b                   	pop    %rbx
    12db:	5d                   	pop    %rbp
    12dc:	41 5c                	pop    %r12
    12de:	41 5d                	pop    %r13
    12e0:	41 5e                	pop    %r14
    12e2:	41 5f                	pop    %r15
    12e4:	c3                   	retq   
    12e5:	90                   	nop
    12e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    12ed:	00 00 00 

00000000000012f0 <__libc_csu_fini>:
    12f0:	f3 c3                	repz retq 

Desensamblado de la secci贸n .fini:

00000000000012f4 <_fini>:
    12f4:	48 83 ec 08          	sub    $0x8,%rsp
    12f8:	48 83 c4 08          	add    $0x8,%rsp
    12fc:	c3                   	retq   
