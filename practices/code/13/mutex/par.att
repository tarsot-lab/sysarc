
par:     formato del fichero elf64-x86-64


Desensamblado de la secci贸n .init:

0000000000001010 <_init>:
    1010:	48 83 ec 08          	sub    $0x8,%rsp
    1014:	48 8b 05 d5 1f 20 00 	mov    0x201fd5(%rip),%rax        # 202ff0 <__gmon_start__>
    101b:	48 85 c0             	test   %rax,%rax
    101e:	74 02                	je     1022 <_init+0x12>
    1020:	ff d0                	callq  *%rax
    1022:	48 83 c4 08          	add    $0x8,%rsp
    1026:	c3                   	retq   

Desensamblado de la secci贸n .plt:

0000000000001030 <.plt>:
    1030:	ff 35 d2 1f 20 00    	pushq  0x201fd2(%rip)        # 203008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1036:	ff 25 d4 1f 20 00    	jmpq   *0x201fd4(%rip)        # 203010 <_GLOBAL_OFFSET_TABLE_+0x10>
    103c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001040 <__errno_location@plt>:
    1040:	ff 25 d2 1f 20 00    	jmpq   *0x201fd2(%rip)        # 203018 <__errno_location@GLIBC_2.2.5>
    1046:	68 00 00 00 00       	pushq  $0x0
    104b:	e9 e0 ff ff ff       	jmpq   1030 <.plt>

0000000000001050 <std::terminate()@plt>:
    1050:	ff 25 ca 1f 20 00    	jmpq   *0x201fca(%rip)        # 203020 <std::terminate()@GLIBCXX_3.4>
    1056:	68 01 00 00 00       	pushq  $0x1
    105b:	e9 d0 ff ff ff       	jmpq   1030 <.plt>

0000000000001060 <nanosleep@plt>:
    1060:	ff 25 c2 1f 20 00    	jmpq   *0x201fc2(%rip)        # 203028 <nanosleep@GLIBC_2.2.5>
    1066:	68 02 00 00 00       	pushq  $0x2
    106b:	e9 c0 ff ff ff       	jmpq   1030 <.plt>

0000000000001070 <std::thread::_State::~_State()@plt>:
    1070:	ff 25 ba 1f 20 00    	jmpq   *0x201fba(%rip)        # 203030 <std::thread::_State::~_State()@GLIBCXX_3.4.22>
    1076:	68 03 00 00 00       	pushq  $0x3
    107b:	e9 b0 ff ff ff       	jmpq   1030 <.plt>

0000000000001080 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    1080:	ff 25 b2 1f 20 00    	jmpq   *0x201fb2(%rip)        # 203038 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    1086:	68 04 00 00 00       	pushq  $0x4
    108b:	e9 a0 ff ff ff       	jmpq   1030 <.plt>

0000000000001090 <std::__throw_system_error(int)@plt>:
    1090:	ff 25 aa 1f 20 00    	jmpq   *0x201faa(%rip)        # 203040 <std::__throw_system_error(int)@GLIBCXX_3.4.11>
    1096:	68 05 00 00 00       	pushq  $0x5
    109b:	e9 90 ff ff ff       	jmpq   1030 <.plt>

00000000000010a0 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
    10a0:	ff 25 a2 1f 20 00    	jmpq   *0x201fa2(%rip)        # 203048 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@GLIBCXX_3.4.9>
    10a6:	68 06 00 00 00       	pushq  $0x6
    10ab:	e9 80 ff ff ff       	jmpq   1030 <.plt>

00000000000010b0 <pthread_mutex_unlock@plt>:
    10b0:	ff 25 9a 1f 20 00    	jmpq   *0x201f9a(%rip)        # 203050 <pthread_mutex_unlock@GLIBC_2.2.5>
    10b6:	68 07 00 00 00       	pushq  $0x7
    10bb:	e9 70 ff ff ff       	jmpq   1030 <.plt>

00000000000010c0 <__cxa_atexit@plt>:
    10c0:	ff 25 92 1f 20 00    	jmpq   *0x201f92(%rip)        # 203058 <__cxa_atexit@GLIBC_2.2.5>
    10c6:	68 08 00 00 00       	pushq  $0x8
    10cb:	e9 60 ff ff ff       	jmpq   1030 <.plt>

00000000000010d0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>:
    10d0:	ff 25 8a 1f 20 00    	jmpq   *0x201f8a(%rip)        # 203060 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@GLIBCXX_3.4.22>
    10d6:	68 09 00 00 00       	pushq  $0x9
    10db:	e9 50 ff ff ff       	jmpq   1030 <.plt>

00000000000010e0 <operator delete(void*)@plt>:
    10e0:	ff 25 82 1f 20 00    	jmpq   *0x201f82(%rip)        # 203068 <operator delete(void*)@GLIBCXX_3.4>
    10e6:	68 0a 00 00 00       	pushq  $0xa
    10eb:	e9 40 ff ff ff       	jmpq   1030 <.plt>

00000000000010f0 <operator new(unsigned long)@plt>:
    10f0:	ff 25 7a 1f 20 00    	jmpq   *0x201f7a(%rip)        # 203070 <operator new(unsigned long)@GLIBCXX_3.4>
    10f6:	68 0b 00 00 00       	pushq  $0xb
    10fb:	e9 30 ff ff ff       	jmpq   1030 <.plt>

0000000000001100 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    1100:	ff 25 72 1f 20 00    	jmpq   *0x201f72(%rip)        # 203078 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    1106:	68 0c 00 00 00       	pushq  $0xc
    110b:	e9 20 ff ff ff       	jmpq   1030 <.plt>

0000000000001110 <std::thread::hardware_concurrency()@plt>:
    1110:	ff 25 6a 1f 20 00    	jmpq   *0x201f6a(%rip)        # 203080 <std::thread::hardware_concurrency()@GLIBCXX_3.4.17>
    1116:	68 0d 00 00 00       	pushq  $0xd
    111b:	e9 10 ff ff ff       	jmpq   1030 <.plt>

0000000000001120 <pthread_mutex_lock@plt>:
    1120:	ff 25 62 1f 20 00    	jmpq   *0x201f62(%rip)        # 203088 <pthread_mutex_lock@GLIBC_2.2.5>
    1126:	68 0e 00 00 00       	pushq  $0xe
    112b:	e9 00 ff ff ff       	jmpq   1030 <.plt>

0000000000001130 <std::ios_base::Init::Init()@plt>:
    1130:	ff 25 5a 1f 20 00    	jmpq   *0x201f5a(%rip)        # 203090 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    1136:	68 0f 00 00 00       	pushq  $0xf
    113b:	e9 f0 fe ff ff       	jmpq   1030 <.plt>

0000000000001140 <std::thread::join()@plt>:
    1140:	ff 25 52 1f 20 00    	jmpq   *0x201f52(%rip)        # 203098 <std::thread::join()@GLIBCXX_3.4.11>
    1146:	68 10 00 00 00       	pushq  $0x10
    114b:	e9 e0 fe ff ff       	jmpq   1030 <.plt>

0000000000001150 <_Unwind_Resume@plt>:
    1150:	ff 25 4a 1f 20 00    	jmpq   *0x201f4a(%rip)        # 2030a0 <_Unwind_Resume@GCC_3.0>
    1156:	68 11 00 00 00       	pushq  $0x11
    115b:	e9 d0 fe ff ff       	jmpq   1030 <.plt>

Desensamblado de la secci贸n .plt.got:

0000000000001160 <.plt.got>:
    1160:	ff 25 52 1e 20 00    	jmpq   *0x201e52(%rip)        # 202fb8 <__cxa_finalize@GLIBC_2.2.5>
    1166:	66 90                	xchg   %ax,%ax

Desensamblado de la secci贸n .text:

0000000000001170 <main>:
    1170:	55                   	push   %rbp
    1171:	48 89 e5             	mov    %rsp,%rbp
    1174:	41 57                	push   %r15
    1176:	41 56                	push   %r14
    1178:	41 55                	push   %r13
    117a:	41 54                	push   %r12
    117c:	41 52                	push   %r10
    117e:	53                   	push   %rbx
    117f:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1186:	e8 85 ff ff ff       	callq  1110 <std::thread::hardware_concurrency()@plt>
    118b:	be 02 00 00 00       	mov    $0x2,%esi
    1190:	83 f8 02             	cmp    $0x2,%eax
    1193:	0f 42 c6             	cmovb  %esi,%eax
    1196:	d1 e8                	shr    %eax
    1198:	89 c0                	mov    %eax,%eax
    119a:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    11a1:	00 
    11a2:	48 89 c6             	mov    %rax,%rsi
    11a5:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
    11a9:	4c 8d 49 16          	lea    0x16(%rcx),%r9
    11ad:	48 89 8d 40 ff ff ff 	mov    %rcx,-0xc0(%rbp)
    11b4:	b9 03 00 00 00       	mov    $0x3,%ecx
    11b9:	4c 89 ca             	mov    %r9,%rdx
    11bc:	48 c1 ea 04          	shr    $0x4,%rdx
    11c0:	48 c1 e2 04          	shl    $0x4,%rdx
    11c4:	48 29 d4             	sub    %rdx,%rsp
    11c7:	c4 62 f3 f7 d4       	shrx   %rcx,%rsp,%r10
    11cc:	4a 8d 0c d5 00 00 00 	lea    0x0(,%r10,8),%rcx
    11d3:	00 
    11d4:	48 89 ca             	mov    %rcx,%rdx
    11d7:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
    11de:	48 c1 ea 03          	shr    $0x3,%rdx
    11e2:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    11e9:	48 f7 da             	neg    %rdx
    11ec:	83 e2 03             	and    $0x3,%edx
    11ef:	48 39 c2             	cmp    %rax,%rdx
    11f2:	48 0f 47 d0          	cmova  %rax,%rdx
    11f6:	83 f8 06             	cmp    $0x6,%eax
    11f9:	0f 87 10 07 00 00    	ja     190f <main+0x79f>
    11ff:	48 89 c2             	mov    %rax,%rdx
    1202:	48 89 cb             	mov    %rcx,%rbx
    1205:	4c 8d 41 08          	lea    0x8(%rcx),%r8
    1209:	48 8d 48 fe          	lea    -0x2(%rax),%rcx
    120d:	4a c7 04 d5 00 00 00 	movq   $0x0,0x0(,%r10,8)
    1214:	00 00 00 00 00 
    1219:	49 89 cb             	mov    %rcx,%r11
    121c:	48 83 fa 01          	cmp    $0x1,%rdx
    1220:	74 7c                	je     129e <main+0x12e>
    1222:	4a c7 04 d5 08 00 00 	movq   $0x0,0x8(,%r10,8)
    1229:	00 00 00 00 00 
    122e:	4c 8d 43 10          	lea    0x10(%rbx),%r8
    1232:	4c 8d 58 fd          	lea    -0x3(%rax),%r11
    1236:	48 83 fa 02          	cmp    $0x2,%rdx
    123a:	74 62                	je     129e <main+0x12e>
    123c:	4a c7 04 d5 10 00 00 	movq   $0x0,0x10(,%r10,8)
    1243:	00 00 00 00 00 
    1248:	4c 8d 43 18          	lea    0x18(%rbx),%r8
    124c:	4c 8d 58 fc          	lea    -0x4(%rax),%r11
    1250:	48 83 fa 03          	cmp    $0x3,%rdx
    1254:	74 48                	je     129e <main+0x12e>
    1256:	4a c7 04 d5 18 00 00 	movq   $0x0,0x18(,%r10,8)
    125d:	00 00 00 00 00 
    1262:	4c 8d 43 20          	lea    0x20(%rbx),%r8
    1266:	4c 8d 58 fb          	lea    -0x5(%rax),%r11
    126a:	48 83 fa 04          	cmp    $0x4,%rdx
    126e:	74 2e                	je     129e <main+0x12e>
    1270:	4a c7 04 d5 20 00 00 	movq   $0x0,0x20(,%r10,8)
    1277:	00 00 00 00 00 
    127c:	4c 8d 43 28          	lea    0x28(%rbx),%r8
    1280:	4c 8d 58 fa          	lea    -0x6(%rax),%r11
    1284:	48 83 fa 05          	cmp    $0x5,%rdx
    1288:	74 14                	je     129e <main+0x12e>
    128a:	4a c7 04 d5 28 00 00 	movq   $0x0,0x28(,%r10,8)
    1291:	00 00 00 00 00 
    1296:	4c 8d 43 30          	lea    0x30(%rbx),%r8
    129a:	4c 8d 58 f9          	lea    -0x7(%rax),%r11
    129e:	48 39 d0             	cmp    %rdx,%rax
    12a1:	0f 84 44 06 00 00    	je     18eb <main+0x77b>
    12a7:	48 89 c3             	mov    %rax,%rbx
    12aa:	49 89 fc             	mov    %rdi,%r12
    12ad:	48 29 d3             	sub    %rdx,%rbx
    12b0:	49 29 d4             	sub    %rdx,%r12
    12b3:	48 8d 4b fc          	lea    -0x4(%rbx),%rcx
    12b7:	48 c1 e9 02          	shr    $0x2,%rcx
    12bb:	48 83 c1 01          	add    $0x1,%rcx
    12bf:	4c 8d 14 8d 00 00 00 	lea    0x0(,%rcx,4),%r10
    12c6:	00 
    12c7:	49 83 fc 02          	cmp    $0x2,%r12
    12cb:	76 30                	jbe    12fd <main+0x18d>
    12cd:	4c 8b bd 50 ff ff ff 	mov    -0xb0(%rbp),%r15
    12d4:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    12d8:	4d 8d 24 d7          	lea    (%r15,%rdx,8),%r12
    12dc:	31 d2                	xor    %edx,%edx
    12de:	48 83 c2 01          	add    $0x1,%rdx
    12e2:	c4 c1 7d 7f 04 24    	vmovdqa %ymm0,(%r12)
    12e8:	49 83 c4 20          	add    $0x20,%r12
    12ec:	48 39 d1             	cmp    %rdx,%rcx
    12ef:	77 ed                	ja     12de <main+0x16e>
    12f1:	4f 8d 04 d0          	lea    (%r8,%r10,8),%r8
    12f5:	4d 29 d3             	sub    %r10,%r11
    12f8:	4c 39 d3             	cmp    %r10,%rbx
    12fb:	74 22                	je     131f <main+0x1af>
    12fd:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    1304:	4d 85 db             	test   %r11,%r11
    1307:	74 16                	je     131f <main+0x1af>
    1309:	49 83 eb 01          	sub    $0x1,%r11
    130d:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
    1314:	00 
    1315:	74 08                	je     131f <main+0x1af>
    1317:	49 c7 40 10 00 00 00 	movq   $0x0,0x10(%r8)
    131e:	00 
    131f:	49 c1 e9 04          	shr    $0x4,%r9
    1323:	49 c1 e1 04          	shl    $0x4,%r9
    1327:	4c 29 cc             	sub    %r9,%rsp
    132a:	48 89 e2             	mov    %rsp,%rdx
    132d:	48 89 a5 48 ff ff ff 	mov    %rsp,-0xb8(%rbp)
    1334:	48 c1 ea 03          	shr    $0x3,%rdx
    1338:	48 89 a5 78 ff ff ff 	mov    %rsp,-0x88(%rbp)
    133f:	48 f7 da             	neg    %rdx
    1342:	83 e2 03             	and    $0x3,%edx
    1345:	48 39 c2             	cmp    %rax,%rdx
    1348:	48 0f 47 d0          	cmova  %rax,%rdx
    134c:	83 fe 06             	cmp    $0x6,%esi
    134f:	0f 87 ce 05 00 00    	ja     1923 <main+0x7b3>
    1355:	48 89 c2             	mov    %rax,%rdx
    1358:	48 8d 48 fe          	lea    -0x2(%rax),%rcx
    135c:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
    1363:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    136a:	4c 8d 46 08          	lea    0x8(%rsi),%r8
    136e:	48 83 fa 01          	cmp    $0x1,%rdx
    1372:	74 68                	je     13dc <main+0x26c>
    1374:	48 c7 46 08 00 00 00 	movq   $0x0,0x8(%rsi)
    137b:	00 
    137c:	4c 8d 46 10          	lea    0x10(%rsi),%r8
    1380:	48 8d 48 fd          	lea    -0x3(%rax),%rcx
    1384:	48 83 fa 02          	cmp    $0x2,%rdx
    1388:	74 52                	je     13dc <main+0x26c>
    138a:	48 c7 46 10 00 00 00 	movq   $0x0,0x10(%rsi)
    1391:	00 
    1392:	4c 8d 46 18          	lea    0x18(%rsi),%r8
    1396:	48 8d 48 fc          	lea    -0x4(%rax),%rcx
    139a:	48 83 fa 03          	cmp    $0x3,%rdx
    139e:	74 3c                	je     13dc <main+0x26c>
    13a0:	48 c7 46 18 00 00 00 	movq   $0x0,0x18(%rsi)
    13a7:	00 
    13a8:	4c 8d 46 20          	lea    0x20(%rsi),%r8
    13ac:	48 8d 48 fb          	lea    -0x5(%rax),%rcx
    13b0:	48 83 fa 04          	cmp    $0x4,%rdx
    13b4:	74 26                	je     13dc <main+0x26c>
    13b6:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    13bd:	00 
    13be:	4c 8d 46 28          	lea    0x28(%rsi),%r8
    13c2:	48 8d 48 fa          	lea    -0x6(%rax),%rcx
    13c6:	48 83 fa 05          	cmp    $0x5,%rdx
    13ca:	74 10                	je     13dc <main+0x26c>
    13cc:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    13d3:	00 
    13d4:	4c 8d 46 30          	lea    0x30(%rsi),%r8
    13d8:	48 8d 48 f9          	lea    -0x7(%rax),%rcx
    13dc:	48 39 d0             	cmp    %rdx,%rax
    13df:	74 70                	je     1451 <main+0x2e1>
    13e1:	48 29 d0             	sub    %rdx,%rax
    13e4:	48 29 d7             	sub    %rdx,%rdi
    13e7:	48 8d 70 fc          	lea    -0x4(%rax),%rsi
    13eb:	48 c1 ee 02          	shr    $0x2,%rsi
    13ef:	48 83 c6 01          	add    $0x1,%rsi
    13f3:	4c 8d 0c b5 00 00 00 	lea    0x0(,%rsi,4),%r9
    13fa:	00 
    13fb:	48 83 ff 02          	cmp    $0x2,%rdi
    13ff:	76 2e                	jbe    142f <main+0x2bf>
    1401:	48 8b 9d 48 ff ff ff 	mov    -0xb8(%rbp),%rbx
    1408:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    140c:	48 8d 3c d3          	lea    (%rbx,%rdx,8),%rdi
    1410:	31 d2                	xor    %edx,%edx
    1412:	48 83 c2 01          	add    $0x1,%rdx
    1416:	c5 fd 7f 07          	vmovdqa %ymm0,(%rdi)
    141a:	48 83 c7 20          	add    $0x20,%rdi
    141e:	48 39 d6             	cmp    %rdx,%rsi
    1421:	77 ef                	ja     1412 <main+0x2a2>
    1423:	4f 8d 04 c8          	lea    (%r8,%r9,8),%r8
    1427:	4c 29 c9             	sub    %r9,%rcx
    142a:	4c 39 c8             	cmp    %r9,%rax
    142d:	74 22                	je     1451 <main+0x2e1>
    142f:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    1436:	48 85 c9             	test   %rcx,%rcx
    1439:	74 16                	je     1451 <main+0x2e1>
    143b:	48 83 e9 01          	sub    $0x1,%rcx
    143f:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
    1446:	00 
    1447:	74 08                	je     1451 <main+0x2e1>
    1449:	49 c7 40 10 00 00 00 	movq   $0x0,0x10(%r8)
    1450:	00 
    1451:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
    1458:	48 89 c8             	mov    %rcx,%rax
    145b:	48 03 85 40 ff ff ff 	add    -0xc0(%rbp),%rax
    1462:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    1466:	48 39 c1             	cmp    %rax,%rcx
    1469:	0f 84 cd 04 00 00    	je     193c <main+0x7cc>
    146f:	49 89 cc             	mov    %rcx,%r12
    1472:	48 8d 3d 07 07 00 00 	lea    0x707(%rip),%rdi        # 1b80 <pusher()>
    1479:	c5 f8 77             	vzeroupper 
    147c:	e8 8f 08 00 00       	callq  1d10 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    1481:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
    1485:	48 89 c3             	mov    %rax,%rbx
    1488:	e8 c3 08 00 00       	callq  1d50 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    148d:	48 89 df             	mov    %rbx,%rdi
    1490:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
    1494:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    149b:	e8 70 08 00 00       	callq  1d10 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    14a0:	48 89 df             	mov    %rbx,%rdi
    14a3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    14aa:	e8 71 08 00 00       	callq  1d20 <std::_Maybe_wrap_member_pointer<void (*)()>::__do_wrap(void (*&&)())>
    14af:	48 89 c7             	mov    %rax,%rdi
    14b2:	e8 89 08 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    14b7:	48 89 c7             	mov    %rax,%rdi
    14ba:	e8 81 08 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    14bf:	48 89 c7             	mov    %rax,%rdi
    14c2:	e8 79 08 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    14c7:	48 89 c7             	mov    %rax,%rdi
    14ca:	e8 71 08 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    14cf:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    14d6:	49 89 c7             	mov    %rax,%r15
    14d9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    14e0:	48 01 c8             	add    %rcx,%rax
    14e3:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    14ea:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    14ee:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    14f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14f8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    14ff:	bf 10 00 00 00       	mov    $0x10,%edi
    1504:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    150b:	00 
    150c:	4c 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%r14
    1513:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1517:	49 8b 07             	mov    (%r15),%rax
    151a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    151e:	e8 cd fb ff ff       	callq  10f0 <operator new(unsigned long)@plt>
    1523:	49 89 c5             	mov    %rax,%r13
    1526:	48 8d 05 1b 18 20 00 	lea    0x20181b(%rip),%rax        # 202d48 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    152d:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
    1534:	49 89 45 00          	mov    %rax,0x0(%r13)
    1538:	e8 13 08 00 00       	callq  1d50 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    153d:	48 89 c7             	mov    %rax,%rdi
    1540:	e8 eb 07 00 00       	callq  1d30 <std::_Tuple_impl<0ul, void (*)()>::_M_head(std::_Tuple_impl<0ul, void (*)()>&)>
    1545:	48 89 c7             	mov    %rax,%rdi
    1548:	e8 f3 07 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    154d:	48 89 c7             	mov    %rax,%rdi
    1550:	e8 eb 07 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1555:	48 89 df             	mov    %rbx,%rdi
    1558:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    155f:	00 
    1560:	48 8b 00             	mov    (%rax),%rax
    1563:	49 89 45 08          	mov    %rax,0x8(%r13)
    1567:	e8 f4 07 00 00       	callq  1d60 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>
    156c:	48 8b 15 55 1a 20 00 	mov    0x201a55(%rip),%rdx        # 202fc8 <pthread_create@GLIBC_2.2.5>
    1573:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    1577:	48 89 de             	mov    %rbx,%rsi
    157a:	4c 89 28             	mov    %r13,(%rax)
    157d:	49 89 c6             	mov    %rax,%r14
    1580:	e8 4b fb ff ff       	callq  10d0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
    1585:	49 8b 3e             	mov    (%r14),%rdi
    1588:	48 85 ff             	test   %rdi,%rdi
    158b:	74 06                	je     1593 <main+0x423>
    158d:	48 8b 07             	mov    (%rdi),%rax
    1590:	ff 50 08             	callq  *0x8(%rax)
    1593:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    159a:	49 8b 3c 24          	mov    (%r12),%rdi
    159e:	31 f6                	xor    %esi,%esi
    15a0:	e8 6b 06 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    15a5:	84 c0                	test   %al,%al
    15a7:	0f 84 8a 03 00 00    	je     1937 <main+0x7c7>
    15ad:	4c 89 e7             	mov    %r12,%rdi
    15b0:	e8 4b 07 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    15b5:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    15b9:	48 8b 00             	mov    (%rax),%rax
    15bc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    15c0:	e8 3b 07 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    15c5:	48 89 df             	mov    %rbx,%rdi
    15c8:	48 8b 00             	mov    (%rax),%rax
    15cb:	49 89 04 24          	mov    %rax,(%r12)
    15cf:	e8 2c 07 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    15d4:	31 f6                	xor    %esi,%esi
    15d6:	48 8b 38             	mov    (%rax),%rdi
    15d9:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    15dd:	e8 2e 06 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    15e2:	84 c0                	test   %al,%al
    15e4:	0f 84 4d 03 00 00    	je     1937 <main+0x7c7>
    15ea:	49 83 c4 08          	add    $0x8,%r12
    15ee:	4c 39 65 80          	cmp    %r12,-0x80(%rbp)
    15f2:	0f 85 00 ff ff ff    	jne    14f8 <main+0x388>
    15f8:	4c 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%r14
    15ff:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    1606:	49 01 c6             	add    %rax,%r14
    1609:	4c 89 b5 40 ff ff ff 	mov    %r14,-0xc0(%rbp)
    1610:	49 39 c6             	cmp    %rax,%r14
    1613:	0f 84 6f 01 00 00    	je     1788 <main+0x618>
    1619:	48 8d 3d 00 06 00 00 	lea    0x600(%rip),%rdi        # 1c20 <popper()>
    1620:	e8 eb 06 00 00       	callq  1d10 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    1625:	48 8d 7d b8          	lea    -0x48(%rbp),%rdi
    1629:	49 89 c4             	mov    %rax,%r12
    162c:	e8 1f 07 00 00       	callq  1d50 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    1631:	4c 89 e7             	mov    %r12,%rdi
    1634:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    163b:	e8 d0 06 00 00       	callq  1d10 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    1640:	48 89 df             	mov    %rbx,%rdi
    1643:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    164a:	e8 d1 06 00 00       	callq  1d20 <std::_Maybe_wrap_member_pointer<void (*)()>::__do_wrap(void (*&&)())>
    164f:	48 89 c7             	mov    %rax,%rdi
    1652:	e8 e9 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1657:	48 89 c7             	mov    %rax,%rdi
    165a:	e8 e1 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    165f:	48 89 c7             	mov    %rax,%rdi
    1662:	e8 d9 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1667:	48 89 c7             	mov    %rax,%rdi
    166a:	e8 d1 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    166f:	4c 8b a5 78 ff ff ff 	mov    -0x88(%rbp),%r12
    1676:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    167d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    1681:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1685:	0f 1f 00             	nopl   (%rax)
    1688:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    168f:	bf 10 00 00 00       	mov    $0x10,%edi
    1694:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    169b:	00 
    169c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    16a0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    16a7:	48 8b 00             	mov    (%rax),%rax
    16aa:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    16ae:	e8 3d fa ff ff       	callq  10f0 <operator new(unsigned long)@plt>
    16b3:	49 89 c7             	mov    %rax,%r15
    16b6:	48 8d 05 8b 16 20 00 	lea    0x20168b(%rip),%rax        # 202d48 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    16bd:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
    16c4:	49 89 07             	mov    %rax,(%r15)
    16c7:	e8 84 06 00 00       	callq  1d50 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    16cc:	48 89 c7             	mov    %rax,%rdi
    16cf:	e8 5c 06 00 00       	callq  1d30 <std::_Tuple_impl<0ul, void (*)()>::_M_head(std::_Tuple_impl<0ul, void (*)()>&)>
    16d4:	48 89 c7             	mov    %rax,%rdi
    16d7:	e8 64 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    16dc:	48 89 c7             	mov    %rax,%rdi
    16df:	e8 5c 06 00 00       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    16e4:	48 89 df             	mov    %rbx,%rdi
    16e7:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    16ee:	00 
    16ef:	48 8b 00             	mov    (%rax),%rax
    16f2:	49 89 47 08          	mov    %rax,0x8(%r15)
    16f6:	e8 65 06 00 00       	callq  1d60 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>
    16fb:	48 8b 15 c6 18 20 00 	mov    0x2018c6(%rip),%rdx        # 202fc8 <pthread_create@GLIBC_2.2.5>
    1702:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    1706:	48 89 de             	mov    %rbx,%rsi
    1709:	4c 89 38             	mov    %r15,(%rax)
    170c:	49 89 c5             	mov    %rax,%r13
    170f:	e8 bc f9 ff ff       	callq  10d0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
    1714:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    1718:	48 85 ff             	test   %rdi,%rdi
    171b:	74 06                	je     1723 <main+0x5b3>
    171d:	48 8b 07             	mov    (%rdi),%rax
    1720:	ff 50 08             	callq  *0x8(%rax)
    1723:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    172a:	00 
    172b:	49 8b 3c 24          	mov    (%r12),%rdi
    172f:	31 f6                	xor    %esi,%esi
    1731:	e8 da 04 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    1736:	84 c0                	test   %al,%al
    1738:	0f 84 f9 01 00 00    	je     1937 <main+0x7c7>
    173e:	4c 89 e7             	mov    %r12,%rdi
    1741:	e8 ba 05 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    1746:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    174a:	48 8b 00             	mov    (%rax),%rax
    174d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1751:	e8 aa 05 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    1756:	48 89 df             	mov    %rbx,%rdi
    1759:	48 8b 00             	mov    (%rax),%rax
    175c:	49 89 04 24          	mov    %rax,(%r12)
    1760:	e8 9b 05 00 00       	callq  1d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>
    1765:	31 f6                	xor    %esi,%esi
    1767:	48 8b 38             	mov    (%rax),%rdi
    176a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    176e:	e8 9d 04 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    1773:	84 c0                	test   %al,%al
    1775:	0f 84 bc 01 00 00    	je     1937 <main+0x7c7>
    177b:	49 83 c4 08          	add    $0x8,%r12
    177f:	4d 39 e6             	cmp    %r12,%r14
    1782:	0f 85 00 ff ff ff    	jne    1688 <main+0x518>
    1788:	c5 f9 6f 05 10 07 00 	vmovdqa 0x710(%rip),%xmm0        # 1ea0 <typeinfo name for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x40>
    178f:	00 
    1790:	c5 f8 29 45 c0       	vmovaps %xmm0,-0x40(%rbp)
    1795:	48 89 de             	mov    %rbx,%rsi
    1798:	48 89 df             	mov    %rbx,%rdi
    179b:	e8 c0 f8 ff ff       	callq  1060 <nanosleep@plt>
    17a0:	83 f8 ff             	cmp    $0xffffffff,%eax
    17a3:	0f 84 2f 01 00 00    	je     18d8 <main+0x768>
    17a9:	c6 05 08 19 20 00 00 	movb   $0x0,0x201908(%rip)        # 2030b8 <run>
    17b0:	0f ae f0             	mfence 
    17b3:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    17b7:	48 39 8d 50 ff ff ff 	cmp    %rcx,-0xb0(%rbp)
    17be:	74 23                	je     17e3 <main+0x673>
    17c0:	48 8b 9d 70 ff ff ff 	mov    -0x90(%rbp),%rbx
    17c7:	48 89 df             	mov    %rbx,%rdi
    17ca:	e8 71 f9 ff ff       	callq  1140 <std::thread::join()@plt>
    17cf:	48 89 d8             	mov    %rbx,%rax
    17d2:	48 83 c0 08          	add    $0x8,%rax
    17d6:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    17dd:	48 39 45 80          	cmp    %rax,-0x80(%rbp)
    17e1:	75 dd                	jne    17c0 <main+0x650>
    17e3:	4c 3b b5 48 ff ff ff 	cmp    -0xb8(%rbp),%r14
    17ea:	74 26                	je     1812 <main+0x6a2>
    17ec:	0f 1f 40 00          	nopl   0x0(%rax)
    17f0:	48 8b 9d 78 ff ff ff 	mov    -0x88(%rbp),%rbx
    17f7:	48 89 df             	mov    %rbx,%rdi
    17fa:	e8 41 f9 ff ff       	callq  1140 <std::thread::join()@plt>
    17ff:	48 89 d8             	mov    %rbx,%rax
    1802:	48 83 c0 08          	add    $0x8,%rax
    1806:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    180d:	49 39 c6             	cmp    %rax,%r14
    1810:	75 de                	jne    17f0 <main+0x680>
    1812:	8b 1d 98 1a 20 00    	mov    0x201a98(%rip),%ebx        # 2032b0 <pop>
    1818:	8b 35 96 1a 20 00    	mov    0x201a96(%rip),%esi        # 2032b4 <push>
    181e:	48 8d 3d 3b 19 20 00 	lea    0x20193b(%rip),%rdi        # 203160 <std::cout@@GLIBCXX_3.4>
    1825:	e8 76 f8 ff ff       	callq  10a0 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    182a:	48 8d 75 9f          	lea    -0x61(%rbp),%rsi
    182e:	ba 01 00 00 00       	mov    $0x1,%edx
    1833:	48 89 c7             	mov    %rax,%rdi
    1836:	c6 45 9f 20          	movb   $0x20,-0x61(%rbp)
    183a:	e8 c1 f8 ff ff       	callq  1100 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    183f:	89 de                	mov    %ebx,%esi
    1841:	48 89 c7             	mov    %rax,%rdi
    1844:	e8 57 f8 ff ff       	callq  10a0 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    1849:	48 89 c7             	mov    %rax,%rdi
    184c:	e8 2f f8 ff ff       	callq  1080 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    1851:	4c 3b b5 48 ff ff ff 	cmp    -0xb8(%rbp),%r14
    1858:	74 31                	je     188b <main+0x71b>
    185a:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    1861:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    1868:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    186f:	00 
    1870:	48 83 ea 08          	sub    $0x8,%rdx
    1874:	48 8b 3a             	mov    (%rdx),%rdi
    1877:	31 f6                	xor    %esi,%esi
    1879:	e8 92 03 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    187e:	84 c0                	test   %al,%al
    1880:	0f 84 b1 00 00 00    	je     1937 <main+0x7c7>
    1886:	48 39 ca             	cmp    %rcx,%rdx
    1889:	75 e5                	jne    1870 <main+0x700>
    188b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    188f:	48 39 8d 50 ff ff ff 	cmp    %rcx,-0xb0(%rbp)
    1896:	74 27                	je     18bf <main+0x74f>
    1898:	48 89 ca             	mov    %rcx,%rdx
    189b:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
    18a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    18a8:	48 83 ea 08          	sub    $0x8,%rdx
    18ac:	48 8b 3a             	mov    (%rdx),%rdi
    18af:	31 f6                	xor    %esi,%esi
    18b1:	e8 5a 03 00 00       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    18b6:	84 c0                	test   %al,%al
    18b8:	74 7d                	je     1937 <main+0x7c7>
    18ba:	48 39 d1             	cmp    %rdx,%rcx
    18bd:	75 e9                	jne    18a8 <main+0x738>
    18bf:	48 8d 65 d0          	lea    -0x30(%rbp),%rsp
    18c3:	31 c0                	xor    %eax,%eax
    18c5:	5b                   	pop    %rbx
    18c6:	41 5a                	pop    %r10
    18c8:	41 5c                	pop    %r12
    18ca:	41 5d                	pop    %r13
    18cc:	41 5e                	pop    %r14
    18ce:	41 5f                	pop    %r15
    18d0:	5d                   	pop    %rbp
    18d1:	c3                   	retq   
    18d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    18d8:	e8 63 f7 ff ff       	callq  1040 <__errno_location@plt>
    18dd:	83 38 04             	cmpl   $0x4,(%rax)
    18e0:	0f 85 c3 fe ff ff    	jne    17a9 <main+0x639>
    18e6:	e9 aa fe ff ff       	jmpq   1795 <main+0x625>
    18eb:	4c 89 ca             	mov    %r9,%rdx
    18ee:	48 c1 ea 04          	shr    $0x4,%rdx
    18f2:	48 c1 e2 04          	shl    $0x4,%rdx
    18f6:	48 29 d4             	sub    %rdx,%rsp
    18f9:	48 89 c2             	mov    %rax,%rdx
    18fc:	48 89 a5 48 ff ff ff 	mov    %rsp,-0xb8(%rbp)
    1903:	48 89 a5 78 ff ff ff 	mov    %rsp,-0x88(%rbp)
    190a:	e9 4d fa ff ff       	jmpq   135c <main+0x1ec>
    190f:	49 89 fb             	mov    %rdi,%r11
    1912:	49 89 c8             	mov    %rcx,%r8
    1915:	48 85 d2             	test   %rdx,%rdx
    1918:	0f 84 89 f9 ff ff    	je     12a7 <main+0x137>
    191e:	e9 df f8 ff ff       	jmpq   1202 <main+0x92>
    1923:	48 89 f9             	mov    %rdi,%rcx
    1926:	49 89 e0             	mov    %rsp,%r8
    1929:	48 85 d2             	test   %rdx,%rdx
    192c:	0f 84 af fa ff ff    	je     13e1 <main+0x271>
    1932:	e9 21 fa ff ff       	jmpq   1358 <main+0x1e8>
    1937:	e8 14 f7 ff ff       	callq  1050 <std::terminate()@plt>
    193c:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
    1940:	c5 f8 77             	vzeroupper 
    1943:	e9 b0 fc ff ff       	jmpq   15f8 <main+0x488>
    1948:	49 89 c4             	mov    %rax,%r12
    194b:	48 89 df             	mov    %rbx,%rdi
    194e:	c5 f8 77             	vzeroupper 
    1951:	e8 1a 04 00 00       	callq  1d70 <std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()>
    1956:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    195d:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx
    1964:	4c 8d 34 08          	lea    (%rax,%rcx,1),%r14
    1968:	4c 3b b5 48 ff ff ff 	cmp    -0xb8(%rbp),%r14
    196f:	74 26                	je     1997 <main+0x827>
    1971:	49 83 ee 08          	sub    $0x8,%r14
    1975:	4c 89 f7             	mov    %r14,%rdi
    1978:	e8 63 03 00 00       	callq  1ce0 <std::thread::~thread()>
    197d:	eb e9                	jmp    1968 <main+0x7f8>
    197f:	49 89 c4             	mov    %rax,%r12
    1982:	c5 f8 77             	vzeroupper 
    1985:	eb e1                	jmp    1968 <main+0x7f8>
    1987:	49 89 c4             	mov    %rax,%r12
    198a:	48 89 df             	mov    %rbx,%rdi
    198d:	c5 f8 77             	vzeroupper 
    1990:	e8 db 03 00 00       	callq  1d70 <std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()>
    1995:	eb d1                	jmp    1968 <main+0x7f8>
    1997:	48 8b 5d 80          	mov    -0x80(%rbp),%rbx
    199b:	48 3b 9d 50 ff ff ff 	cmp    -0xb0(%rbp),%rbx
    19a2:	74 0e                	je     19b2 <main+0x842>
    19a4:	48 83 eb 08          	sub    $0x8,%rbx
    19a8:	48 89 df             	mov    %rbx,%rdi
    19ab:	e8 30 03 00 00       	callq  1ce0 <std::thread::~thread()>
    19b0:	eb e9                	jmp    199b <main+0x82b>
    19b2:	4c 89 e7             	mov    %r12,%rdi
    19b5:	e8 96 f7 ff ff       	callq  1150 <_Unwind_Resume@plt>
    19ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000019c0 <_GLOBAL__sub_I_run>:
    19c0:	48 83 ec 08          	sub    $0x8,%rsp
    19c4:	48 8d 3d ed 18 20 00 	lea    0x2018ed(%rip),%rdi        # 2032b8 <std::__ioinit>
    19cb:	e8 60 f7 ff ff       	callq  1130 <std::ios_base::Init::Init()@plt>
    19d0:	48 8b 3d 21 16 20 00 	mov    0x201621(%rip),%rdi        # 202ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    19d7:	48 8d 15 d2 16 20 00 	lea    0x2016d2(%rip),%rdx        # 2030b0 <__dso_handle>
    19de:	48 8d 35 d3 18 20 00 	lea    0x2018d3(%rip),%rsi        # 2032b8 <std::__ioinit>
    19e5:	e8 d6 f6 ff ff       	callq  10c0 <__cxa_atexit@plt>
    19ea:	48 c7 05 8b 18 20 00 	movq   $0x0,0x20188b(%rip)        # 203280 <s>
    19f1:	00 00 00 00 
    19f5:	48 c7 05 88 18 20 00 	movq   $0x0,0x201888(%rip)        # 203288 <s+0x8>
    19fc:	00 00 00 00 
    1a00:	48 c7 05 85 18 20 00 	movq   $0x0,0x201885(%rip)        # 203290 <s+0x10>
    1a07:	00 00 00 00 
    1a0b:	48 c7 05 82 18 20 00 	movq   $0x0,0x201882(%rip)        # 203298 <s+0x18>
    1a12:	00 00 00 00 
    1a16:	48 c7 05 7f 18 20 00 	movq   $0x0,0x20187f(%rip)        # 2032a0 <s+0x20>
    1a1d:	00 00 00 00 
    1a21:	48 c7 05 7c 18 20 00 	movq   $0x0,0x20187c(%rip)        # 2032a8 <s+0x28>
    1a28:	00 00 00 00 
    1a2c:	48 83 c4 08          	add    $0x8,%rsp
    1a30:	c3                   	retq   
    1a31:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1a38:	00 00 00 
    1a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001a40 <_start>:
    1a40:	31 ed                	xor    %ebp,%ebp
    1a42:	49 89 d1             	mov    %rdx,%r9
    1a45:	5e                   	pop    %rsi
    1a46:	48 89 e2             	mov    %rsp,%rdx
    1a49:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1a4d:	50                   	push   %rax
    1a4e:	54                   	push   %rsp
    1a4f:	4c 8d 05 da 03 00 00 	lea    0x3da(%rip),%r8        # 1e30 <__libc_csu_fini>
    1a56:	48 8d 0d 63 03 00 00 	lea    0x363(%rip),%rcx        # 1dc0 <__libc_csu_init>
    1a5d:	48 8d 3d 0c f7 ff ff 	lea    -0x8f4(%rip),%rdi        # 1170 <main>
    1a64:	ff 15 7e 15 20 00    	callq  *0x20157e(%rip)        # 202fe8 <__libc_start_main@GLIBC_2.2.5>
    1a6a:	f4                   	hlt    
    1a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001a70 <deregister_tm_clones>:
    1a70:	48 8d 3d 51 16 20 00 	lea    0x201651(%rip),%rdi        # 2030c8 <__TMC_LIST__>
    1a77:	48 8d 05 d1 16 20 00 	lea    0x2016d1(%rip),%rax        # 20314f <__TMC_END__+0x7>
    1a7e:	55                   	push   %rbp
    1a7f:	48 29 f8             	sub    %rdi,%rax
    1a82:	48 89 e5             	mov    %rsp,%rbp
    1a85:	48 83 f8 0e          	cmp    $0xe,%rax
    1a89:	76 15                	jbe    1aa0 <deregister_tm_clones+0x30>
    1a8b:	48 8b 05 2e 15 20 00 	mov    0x20152e(%rip),%rax        # 202fc0 <_ITM_deregisterTMCloneTable@LIBITM_1.0>
    1a92:	48 85 c0             	test   %rax,%rax
    1a95:	74 09                	je     1aa0 <deregister_tm_clones+0x30>
    1a97:	5d                   	pop    %rbp
    1a98:	ff e0                	jmpq   *%rax
    1a9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1aa0:	5d                   	pop    %rbp
    1aa1:	c3                   	retq   
    1aa2:	0f 1f 40 00          	nopl   0x0(%rax)
    1aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1aad:	00 00 00 

0000000000001ab0 <register_tm_clones>:
    1ab0:	48 8d 3d 11 16 20 00 	lea    0x201611(%rip),%rdi        # 2030c8 <__TMC_LIST__>
    1ab7:	48 8d 35 8a 16 20 00 	lea    0x20168a(%rip),%rsi        # 203148 <__TMC_END__>
    1abe:	55                   	push   %rbp
    1abf:	48 29 fe             	sub    %rdi,%rsi
    1ac2:	48 89 e5             	mov    %rsp,%rbp
    1ac5:	48 c1 fe 03          	sar    $0x3,%rsi
    1ac9:	48 89 f0             	mov    %rsi,%rax
    1acc:	48 c1 e8 3f          	shr    $0x3f,%rax
    1ad0:	48 01 c6             	add    %rax,%rsi
    1ad3:	48 d1 fe             	sar    %rsi
    1ad6:	74 18                	je     1af0 <register_tm_clones+0x40>
    1ad8:	48 8b 05 f1 14 20 00 	mov    0x2014f1(%rip),%rax        # 202fd0 <_ITM_registerTMCloneTable@LIBITM_1.0>
    1adf:	48 85 c0             	test   %rax,%rax
    1ae2:	74 0c                	je     1af0 <register_tm_clones+0x40>
    1ae4:	5d                   	pop    %rbp
    1ae5:	ff e0                	jmpq   *%rax
    1ae7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1aee:	00 00 
    1af0:	5d                   	pop    %rbp
    1af1:	c3                   	retq   
    1af2:	0f 1f 40 00          	nopl   0x0(%rax)
    1af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1afd:	00 00 00 

0000000000001b00 <__do_global_dtors_aux>:
    1b00:	80 3d 69 17 20 00 00 	cmpb   $0x0,0x201769(%rip)        # 203270 <completed.6972>
    1b07:	75 27                	jne    1b30 <__do_global_dtors_aux+0x30>
    1b09:	48 83 3d a7 14 20 00 	cmpq   $0x0,0x2014a7(%rip)        # 202fb8 <__cxa_finalize@GLIBC_2.2.5>
    1b10:	00 
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	74 0c                	je     1b23 <__do_global_dtors_aux+0x23>
    1b17:	48 8b 3d 92 15 20 00 	mov    0x201592(%rip),%rdi        # 2030b0 <__dso_handle>
    1b1e:	e8 3d f6 ff ff       	callq  1160 <.plt.got>
    1b23:	e8 48 ff ff ff       	callq  1a70 <deregister_tm_clones>
    1b28:	5d                   	pop    %rbp
    1b29:	c6 05 40 17 20 00 01 	movb   $0x1,0x201740(%rip)        # 203270 <completed.6972>
    1b30:	f3 c3                	repz retq 
    1b32:	0f 1f 40 00          	nopl   0x0(%rax)
    1b36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1b3d:	00 00 00 

0000000000001b40 <frame_dummy>:
    1b40:	48 8d 3d e9 11 20 00 	lea    0x2011e9(%rip),%rdi        # 202d30 <__JCR_END__>
    1b47:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    1b4b:	75 0b                	jne    1b58 <frame_dummy+0x18>
    1b4d:	e9 5e ff ff ff       	jmpq   1ab0 <register_tm_clones>
    1b52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1b58:	48 8b 05 79 14 20 00 	mov    0x201479(%rip),%rax        # 202fd8 <_Jv_RegisterClasses>
    1b5f:	48 85 c0             	test   %rax,%rax
    1b62:	74 e9                	je     1b4d <frame_dummy+0xd>
    1b64:	55                   	push   %rbp
    1b65:	48 89 e5             	mov    %rsp,%rbp
    1b68:	ff d0                	callq  *%rax
    1b6a:	5d                   	pop    %rbp
    1b6b:	e9 40 ff ff ff       	jmpq   1ab0 <register_tm_clones>

0000000000001b70 <__gthread_active_p()>:
    1b70:	31 c0                	xor    %eax,%eax
    1b72:	48 83 3d 66 14 20 00 	cmpq   $0x0,0x201466(%rip)        # 202fe0 <__pthread_key_create@GLIBC_2.2.5>
    1b79:	00 
    1b7a:	0f 95 c0             	setne  %al
    1b7d:	c3                   	retq   
    1b7e:	66 90                	xchg   %ax,%ax

0000000000001b80 <pusher()>:
    1b80:	55                   	push   %rbp
    1b81:	48 8d 2d f8 16 20 00 	lea    0x2016f8(%rip),%rbp        # 203280 <s>
    1b88:	53                   	push   %rbx
    1b89:	48 83 ec 08          	sub    $0x8,%rsp
    1b8d:	eb 1a                	jmp    1ba9 <pusher()+0x29>
    1b8f:	90                   	nop
    1b90:	48 8b 05 11 17 20 00 	mov    0x201711(%rip),%rax        # 2032a8 <s+0x28>
    1b97:	48 89 1d 0a 17 20 00 	mov    %rbx,0x20170a(%rip)        # 2032a8 <s+0x28>
    1b9e:	48 89 03             	mov    %rax,(%rbx)
    1ba1:	f0 83 05 0b 17 20 00 	lock addl $0x1,0x20170b(%rip)        # 2032b4 <push>
    1ba8:	01 
    1ba9:	0f b6 05 08 15 20 00 	movzbl 0x201508(%rip),%eax        # 2030b8 <run>
    1bb0:	84 c0                	test   %al,%al
    1bb2:	74 44                	je     1bf8 <pusher()+0x78>
    1bb4:	bf 10 00 00 00       	mov    $0x10,%edi
    1bb9:	e8 32 f5 ff ff       	callq  10f0 <operator new(unsigned long)@plt>
    1bbe:	48 89 c3             	mov    %rax,%rbx
    1bc1:	e8 aa ff ff ff       	callq  1b70 <__gthread_active_p()>
    1bc6:	85 c0                	test   %eax,%eax
    1bc8:	74 c6                	je     1b90 <pusher()+0x10>
    1bca:	48 89 ef             	mov    %rbp,%rdi
    1bcd:	e8 4e f5 ff ff       	callq  1120 <pthread_mutex_lock@plt>
    1bd2:	85 c0                	test   %eax,%eax
    1bd4:	75 29                	jne    1bff <pusher()+0x7f>
    1bd6:	48 8b 05 cb 16 20 00 	mov    0x2016cb(%rip),%rax        # 2032a8 <s+0x28>
    1bdd:	48 89 ef             	mov    %rbp,%rdi
    1be0:	48 89 1d c1 16 20 00 	mov    %rbx,0x2016c1(%rip)        # 2032a8 <s+0x28>
    1be7:	48 89 03             	mov    %rax,(%rbx)
    1bea:	e8 c1 f4 ff ff       	callq  10b0 <pthread_mutex_unlock@plt>
    1bef:	eb b0                	jmp    1ba1 <pusher()+0x21>
    1bf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1bf8:	48 83 c4 08          	add    $0x8,%rsp
    1bfc:	5b                   	pop    %rbx
    1bfd:	5d                   	pop    %rbp
    1bfe:	c3                   	retq   
    1bff:	89 c7                	mov    %eax,%edi
    1c01:	e8 8a f4 ff ff       	callq  1090 <std::__throw_system_error(int)@plt>
    1c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1c0d:	00 00 00 

0000000000001c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>:
    1c10:	48 85 ff             	test   %rdi,%rdi
    1c13:	0f 94 c0             	sete   %al
    1c16:	c3                   	retq   
    1c17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1c1e:	00 00 

0000000000001c20 <popper()>:
    1c20:	55                   	push   %rbp
    1c21:	48 8d 2d 58 16 20 00 	lea    0x201658(%rip),%rbp        # 203280 <s>
    1c28:	53                   	push   %rbx
    1c29:	48 83 ec 08          	sub    $0x8,%rsp
    1c2d:	eb 27                	jmp    1c56 <popper()+0x36>
    1c2f:	90                   	nop
    1c30:	48 8b 1d 71 16 20 00 	mov    0x201671(%rip),%rbx        # 2032a8 <s+0x28>
    1c37:	48 85 db             	test   %rbx,%rbx
    1c3a:	74 0a                	je     1c46 <popper()+0x26>
    1c3c:	48 8b 03             	mov    (%rbx),%rax
    1c3f:	48 89 05 62 16 20 00 	mov    %rax,0x201662(%rip)        # 2032a8 <s+0x28>
    1c46:	48 89 df             	mov    %rbx,%rdi
    1c49:	e8 92 f4 ff ff       	callq  10e0 <operator delete(void*)@plt>
    1c4e:	f0 83 05 5a 16 20 00 	lock addl $0x1,0x20165a(%rip)        # 2032b0 <pop>
    1c55:	01 
    1c56:	0f b6 05 5b 14 20 00 	movzbl 0x20145b(%rip),%eax        # 2030b8 <run>
    1c5d:	84 c0                	test   %al,%al
    1c5f:	74 3f                	je     1ca0 <popper()+0x80>
    1c61:	e8 0a ff ff ff       	callq  1b70 <__gthread_active_p()>
    1c66:	85 c0                	test   %eax,%eax
    1c68:	74 c6                	je     1c30 <popper()+0x10>
    1c6a:	48 89 ef             	mov    %rbp,%rdi
    1c6d:	e8 ae f4 ff ff       	callq  1120 <pthread_mutex_lock@plt>
    1c72:	85 c0                	test   %eax,%eax
    1c74:	75 31                	jne    1ca7 <popper()+0x87>
    1c76:	48 8b 1d 2b 16 20 00 	mov    0x20162b(%rip),%rbx        # 2032a8 <s+0x28>
    1c7d:	48 85 db             	test   %rbx,%rbx
    1c80:	74 0a                	je     1c8c <popper()+0x6c>
    1c82:	48 8b 03             	mov    (%rbx),%rax
    1c85:	48 89 05 1c 16 20 00 	mov    %rax,0x20161c(%rip)        # 2032a8 <s+0x28>
    1c8c:	48 89 ef             	mov    %rbp,%rdi
    1c8f:	e8 1c f4 ff ff       	callq  10b0 <pthread_mutex_unlock@plt>
    1c94:	eb b0                	jmp    1c46 <popper()+0x26>
    1c96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1c9d:	00 00 00 
    1ca0:	48 83 c4 08          	add    $0x8,%rsp
    1ca4:	5b                   	pop    %rbx
    1ca5:	5d                   	pop    %rbp
    1ca6:	c3                   	retq   
    1ca7:	89 c7                	mov    %eax,%edi
    1ca9:	e8 e2 f3 ff ff       	callq  1090 <std::__throw_system_error(int)@plt>
    1cae:	66 90                	xchg   %ax,%ax

0000000000001cb0 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::~_State_impl()>:
    1cb0:	48 8d 05 91 10 20 00 	lea    0x201091(%rip),%rax        # 202d48 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    1cb7:	48 89 07             	mov    %rax,(%rdi)
    1cba:	e9 b1 f3 ff ff       	jmpq   1070 <std::thread::_State::~_State()@plt>
    1cbf:	90                   	nop

0000000000001cc0 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::~_State_impl()>:
    1cc0:	48 8d 05 81 10 20 00 	lea    0x201081(%rip),%rax        # 202d48 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    1cc7:	53                   	push   %rbx
    1cc8:	48 89 fb             	mov    %rdi,%rbx
    1ccb:	48 89 07             	mov    %rax,(%rdi)
    1cce:	e8 9d f3 ff ff       	callq  1070 <std::thread::_State::~_State()@plt>
    1cd3:	48 89 df             	mov    %rbx,%rdi
    1cd6:	5b                   	pop    %rbx
    1cd7:	e9 04 f4 ff ff       	jmpq   10e0 <operator delete(void*)@plt>
    1cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001ce0 <std::thread::~thread()>:
    1ce0:	48 83 ec 08          	sub    $0x8,%rsp
    1ce4:	48 8b 3f             	mov    (%rdi),%rdi
    1ce7:	31 f6                	xor    %esi,%esi
    1ce9:	e8 22 ff ff ff       	callq  1c10 <std::operator==(std::thread::id, std::thread::id) [clone .constprop.10]>
    1cee:	84 c0                	test   %al,%al
    1cf0:	74 05                	je     1cf7 <std::thread::~thread()+0x17>
    1cf2:	48 83 c4 08          	add    $0x8,%rsp
    1cf6:	c3                   	retq   
    1cf7:	e8 54 f3 ff ff       	callq  1050 <std::terminate()@plt>
    1cfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001d00 <std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)>:
    1d00:	48 89 f8             	mov    %rdi,%rax
    1d03:	c3                   	retq   
    1d04:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d0b:	00 00 00 
    1d0e:	66 90                	xchg   %ax,%ax

0000000000001d10 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>:
    1d10:	48 89 f8             	mov    %rdi,%rax
    1d13:	c3                   	retq   
    1d14:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d1b:	00 00 00 
    1d1e:	66 90                	xchg   %ax,%ax

0000000000001d20 <std::_Maybe_wrap_member_pointer<void (*)()>::__do_wrap(void (*&&)())>:
    1d20:	48 89 f8             	mov    %rdi,%rax
    1d23:	c3                   	retq   
    1d24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d2b:	00 00 00 
    1d2e:	66 90                	xchg   %ax,%ax

0000000000001d30 <std::_Tuple_impl<0ul, void (*)()>::_M_head(std::_Tuple_impl<0ul, void (*)()>&)>:
    1d30:	48 89 f8             	mov    %rdi,%rax
    1d33:	c3                   	retq   
    1d34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d3b:	00 00 00 
    1d3e:	66 90                	xchg   %ax,%ax

0000000000001d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>:
    1d40:	48 89 f8             	mov    %rdi,%rax
    1d43:	c3                   	retq   
    1d44:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d4b:	00 00 00 
    1d4e:	66 90                	xchg   %ax,%ax

0000000000001d50 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>:
    1d50:	48 89 f8             	mov    %rdi,%rax
    1d53:	c3                   	retq   
    1d54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d5b:	00 00 00 
    1d5e:	66 90                	xchg   %ax,%ax

0000000000001d60 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>:
    1d60:	48 89 f8             	mov    %rdi,%rax
    1d63:	c3                   	retq   
    1d64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d6b:	00 00 00 
    1d6e:	66 90                	xchg   %ax,%ax

0000000000001d70 <std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()>:
    1d70:	53                   	push   %rbx
    1d71:	e8 ea ff ff ff       	callq  1d60 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>
    1d76:	48 8b 38             	mov    (%rax),%rdi
    1d79:	48 89 c3             	mov    %rax,%rbx
    1d7c:	48 85 ff             	test   %rdi,%rdi
    1d7f:	74 06                	je     1d87 <std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()+0x17>
    1d81:	48 8b 07             	mov    (%rdi),%rax
    1d84:	ff 50 08             	callq  *0x8(%rax)
    1d87:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    1d8e:	5b                   	pop    %rbx
    1d8f:	c3                   	retq   

0000000000001d90 <std::tuple_element<0ul, std::tuple<void (*)()> >::type& std::get<0ul, void (*)()>(std::tuple<void (*)()>&)>:
    1d90:	48 89 f8             	mov    %rdi,%rax
    1d93:	c3                   	retq   
    1d94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1d9b:	00 00 00 
    1d9e:	66 90                	xchg   %ax,%ax

0000000000001da0 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::_M_run()>:
    1da0:	48 83 ec 08          	sub    $0x8,%rsp
    1da4:	48 83 c7 08          	add    $0x8,%rdi
    1da8:	e8 e3 ff ff ff       	callq  1d90 <std::tuple_element<0ul, std::tuple<void (*)()> >::type& std::get<0ul, void (*)()>(std::tuple<void (*)()>&)>
    1dad:	48 89 c7             	mov    %rax,%rdi
    1db0:	e8 8b ff ff ff       	callq  1d40 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1db5:	48 8b 00             	mov    (%rax),%rax
    1db8:	48 83 c4 08          	add    $0x8,%rsp
    1dbc:	ff e0                	jmpq   *%rax
    1dbe:	66 90                	xchg   %ax,%ax

0000000000001dc0 <__libc_csu_init>:
    1dc0:	41 57                	push   %r15
    1dc2:	41 56                	push   %r14
    1dc4:	41 89 ff             	mov    %edi,%r15d
    1dc7:	41 55                	push   %r13
    1dc9:	41 54                	push   %r12
    1dcb:	4c 8d 25 46 0f 20 00 	lea    0x200f46(%rip),%r12        # 202d18 <__frame_dummy_init_array_entry>
    1dd2:	55                   	push   %rbp
    1dd3:	48 8d 2d 4e 0f 20 00 	lea    0x200f4e(%rip),%rbp        # 202d28 <__init_array_end>
    1dda:	53                   	push   %rbx
    1ddb:	49 89 f6             	mov    %rsi,%r14
    1dde:	49 89 d5             	mov    %rdx,%r13
    1de1:	4c 29 e5             	sub    %r12,%rbp
    1de4:	48 83 ec 08          	sub    $0x8,%rsp
    1de8:	48 c1 fd 03          	sar    $0x3,%rbp
    1dec:	e8 1f f2 ff ff       	callq  1010 <_init>
    1df1:	48 85 ed             	test   %rbp,%rbp
    1df4:	74 20                	je     1e16 <__libc_csu_init+0x56>
    1df6:	31 db                	xor    %ebx,%ebx
    1df8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1dff:	00 
    1e00:	4c 89 ea             	mov    %r13,%rdx
    1e03:	4c 89 f6             	mov    %r14,%rsi
    1e06:	44 89 ff             	mov    %r15d,%edi
    1e09:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1e0d:	48 83 c3 01          	add    $0x1,%rbx
    1e11:	48 39 dd             	cmp    %rbx,%rbp
    1e14:	75 ea                	jne    1e00 <__libc_csu_init+0x40>
    1e16:	48 83 c4 08          	add    $0x8,%rsp
    1e1a:	5b                   	pop    %rbx
    1e1b:	5d                   	pop    %rbp
    1e1c:	41 5c                	pop    %r12
    1e1e:	41 5d                	pop    %r13
    1e20:	41 5e                	pop    %r14
    1e22:	41 5f                	pop    %r15
    1e24:	c3                   	retq   
    1e25:	90                   	nop
    1e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1e2d:	00 00 00 

0000000000001e30 <__libc_csu_fini>:
    1e30:	f3 c3                	repz retq 

Desensamblado de la secci贸n .fini:

0000000000001e34 <_fini>:
    1e34:	48 83 ec 08          	sub    $0x8,%rsp
    1e38:	48 83 c4 08          	add    $0x8,%rsp
    1e3c:	c3                   	retq   
