
sec:     formato del fichero elf64-x86-64


Desensamblado de la secci贸n .init:

0000000000000fe0 <_init>:
 fe0:	48 83 ec 08          	sub    $0x8,%rsp
 fe4:	48 8b 05 05 10 20 00 	mov    0x201005(%rip),%rax        # 201ff0 <__gmon_start__>
 feb:	48 85 c0             	test   %rax,%rax
 fee:	74 02                	je     ff2 <_init+0x12>
 ff0:	ff d0                	callq  *%rax
 ff2:	48 83 c4 08          	add    $0x8,%rsp
 ff6:	c3                   	retq   

Desensamblado de la secci贸n .plt:

0000000000001000 <.plt>:
    1000:	ff 35 02 10 20 00    	pushq  0x201002(%rip)        # 202008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 04 10 20 00    	jmpq   *0x201004(%rip)        # 202010 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001010 <__errno_location@plt>:
    1010:	ff 25 02 10 20 00    	jmpq   *0x201002(%rip)        # 202018 <__errno_location@GLIBC_2.2.5>
    1016:	68 00 00 00 00       	pushq  $0x0
    101b:	e9 e0 ff ff ff       	jmpq   1000 <.plt>

0000000000001020 <std::terminate()@plt>:
    1020:	ff 25 fa 0f 20 00    	jmpq   *0x200ffa(%rip)        # 202020 <std::terminate()@GLIBCXX_3.4>
    1026:	68 01 00 00 00       	pushq  $0x1
    102b:	e9 d0 ff ff ff       	jmpq   1000 <.plt>

0000000000001030 <nanosleep@plt>:
    1030:	ff 25 f2 0f 20 00    	jmpq   *0x200ff2(%rip)        # 202028 <nanosleep@GLIBC_2.2.5>
    1036:	68 02 00 00 00       	pushq  $0x2
    103b:	e9 c0 ff ff ff       	jmpq   1000 <.plt>

0000000000001040 <std::thread::_State::~_State()@plt>:
    1040:	ff 25 ea 0f 20 00    	jmpq   *0x200fea(%rip)        # 202030 <std::thread::_State::~_State()@GLIBCXX_3.4.22>
    1046:	68 03 00 00 00       	pushq  $0x3
    104b:	e9 b0 ff ff ff       	jmpq   1000 <.plt>

0000000000001050 <_ITM_RU8@plt>:
    1050:	ff 25 e2 0f 20 00    	jmpq   *0x200fe2(%rip)        # 202038 <_ITM_RU8@LIBITM_1.0>
    1056:	68 04 00 00 00       	pushq  $0x4
    105b:	e9 a0 ff ff ff       	jmpq   1000 <.plt>

0000000000001060 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
    1060:	ff 25 da 0f 20 00    	jmpq   *0x200fda(%rip)        # 202040 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@GLIBCXX_3.4>
    1066:	68 05 00 00 00       	pushq  $0x5
    106b:	e9 90 ff ff ff       	jmpq   1000 <.plt>

0000000000001070 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
    1070:	ff 25 d2 0f 20 00    	jmpq   *0x200fd2(%rip)        # 202048 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@GLIBCXX_3.4.9>
    1076:	68 06 00 00 00       	pushq  $0x6
    107b:	e9 80 ff ff ff       	jmpq   1000 <.plt>

0000000000001080 <_ITM_commitTransaction@plt>:
    1080:	ff 25 ca 0f 20 00    	jmpq   *0x200fca(%rip)        # 202050 <_ITM_commitTransaction@LIBITM_1.0>
    1086:	68 07 00 00 00       	pushq  $0x7
    108b:	e9 70 ff ff ff       	jmpq   1000 <.plt>

0000000000001090 <_ITM_WU8@plt>:
    1090:	ff 25 c2 0f 20 00    	jmpq   *0x200fc2(%rip)        # 202058 <_ITM_WU8@LIBITM_1.0>
    1096:	68 08 00 00 00       	pushq  $0x8
    109b:	e9 60 ff ff ff       	jmpq   1000 <.plt>

00000000000010a0 <__cxa_atexit@plt>:
    10a0:	ff 25 ba 0f 20 00    	jmpq   *0x200fba(%rip)        # 202060 <__cxa_atexit@GLIBC_2.2.5>
    10a6:	68 09 00 00 00       	pushq  $0x9
    10ab:	e9 50 ff ff ff       	jmpq   1000 <.plt>

00000000000010b0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>:
    10b0:	ff 25 b2 0f 20 00    	jmpq   *0x200fb2(%rip)        # 202068 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@GLIBCXX_3.4.22>
    10b6:	68 0a 00 00 00       	pushq  $0xa
    10bb:	e9 40 ff ff ff       	jmpq   1000 <.plt>

00000000000010c0 <operator delete(void*)@plt>:
    10c0:	ff 25 aa 0f 20 00    	jmpq   *0x200faa(%rip)        # 202070 <operator delete(void*)@GLIBCXX_3.4>
    10c6:	68 0b 00 00 00       	pushq  $0xb
    10cb:	e9 30 ff ff ff       	jmpq   1000 <.plt>

00000000000010d0 <operator new(unsigned long)@plt>:
    10d0:	ff 25 a2 0f 20 00    	jmpq   *0x200fa2(%rip)        # 202078 <operator new(unsigned long)@GLIBCXX_3.4>
    10d6:	68 0c 00 00 00       	pushq  $0xc
    10db:	e9 20 ff ff ff       	jmpq   1000 <.plt>

00000000000010e0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
    10e0:	ff 25 9a 0f 20 00    	jmpq   *0x200f9a(%rip)        # 202080 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@GLIBCXX_3.4.9>
    10e6:	68 0d 00 00 00       	pushq  $0xd
    10eb:	e9 10 ff ff ff       	jmpq   1000 <.plt>

00000000000010f0 <std::ios_base::Init::Init()@plt>:
    10f0:	ff 25 92 0f 20 00    	jmpq   *0x200f92(%rip)        # 202088 <std::ios_base::Init::Init()@GLIBCXX_3.4>
    10f6:	68 0e 00 00 00       	pushq  $0xe
    10fb:	e9 00 ff ff ff       	jmpq   1000 <.plt>

0000000000001100 <std::thread::join()@plt>:
    1100:	ff 25 8a 0f 20 00    	jmpq   *0x200f8a(%rip)        # 202090 <std::thread::join()@GLIBCXX_3.4.11>
    1106:	68 0f 00 00 00       	pushq  $0xf
    110b:	e9 f0 fe ff ff       	jmpq   1000 <.plt>

0000000000001110 <_Unwind_Resume@plt>:
    1110:	ff 25 82 0f 20 00    	jmpq   *0x200f82(%rip)        # 202098 <_Unwind_Resume@GCC_3.0>
    1116:	68 10 00 00 00       	pushq  $0x10
    111b:	e9 e0 fe ff ff       	jmpq   1000 <.plt>

0000000000001120 <_ITM_beginTransaction@plt>:
    1120:	ff 25 7a 0f 20 00    	jmpq   *0x200f7a(%rip)        # 2020a0 <_ITM_beginTransaction@LIBITM_1.0>
    1126:	68 11 00 00 00       	pushq  $0x11
    112b:	e9 d0 fe ff ff       	jmpq   1000 <.plt>

Desensamblado de la secci贸n .plt.got:

0000000000001130 <.plt.got>:
    1130:	ff 25 8a 0e 20 00    	jmpq   *0x200e8a(%rip)        # 201fc0 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Desensamblado de la secci贸n .text:

0000000000001140 <main>:
    1140:	55                   	push   %rbp
    1141:	48 8d 35 48 02 00 00 	lea    0x248(%rip),%rsi        # 1390 <work()>
    1148:	53                   	push   %rbx
    1149:	48 83 ec 28          	sub    $0x28,%rsp
    114d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    1152:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    1157:	48 89 ef             	mov    %rbp,%rdi
    115a:	e8 61 04 00 00       	callq  15c0 <std::thread::thread<void (&)()>(void (&)())>
    115f:	c5 f9 6f 05 d9 06 00 	vmovdqa 0x6d9(%rip),%xmm0        # 1840 <typeinfo name for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x40>
    1166:	00 
    1167:	c5 f8 29 44 24 10    	vmovaps %xmm0,0x10(%rsp)
    116d:	48 89 de             	mov    %rbx,%rsi
    1170:	48 89 df             	mov    %rbx,%rdi
    1173:	e8 b8 fe ff ff       	callq  1030 <nanosleep@plt>
    1178:	83 f8 ff             	cmp    $0xffffffff,%eax
    117b:	74 73                	je     11f0 <main+0xb0>
    117d:	c6 05 34 0f 20 00 00 	movb   $0x0,0x200f34(%rip)        # 2020b8 <run>
    1184:	48 89 ef             	mov    %rbp,%rdi
    1187:	0f ae f0             	mfence 
    118a:	e8 71 ff ff ff       	callq  1100 <std::thread::join()@plt>
    118f:	8b 35 03 11 20 00    	mov    0x201103(%rip),%esi        # 202298 <push>
    1195:	48 8d 3d e4 0f 20 00 	lea    0x200fe4(%rip),%rdi        # 202180 <std::cout@@GLIBCXX_3.4>
    119c:	8b 1d f2 10 20 00    	mov    0x2010f2(%rip),%ebx        # 202294 <pop>
    11a2:	e8 c9 fe ff ff       	callq  1070 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    11a7:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
    11ac:	ba 01 00 00 00       	mov    $0x1,%edx
    11b1:	48 89 c7             	mov    %rax,%rdi
    11b4:	c6 44 24 07 20       	movb   $0x20,0x7(%rsp)
    11b9:	e8 22 ff ff ff       	callq  10e0 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
    11be:	89 de                	mov    %ebx,%esi
    11c0:	48 89 c7             	mov    %rax,%rdi
    11c3:	e8 a8 fe ff ff       	callq  1070 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
    11c8:	48 89 c7             	mov    %rax,%rdi
    11cb:	e8 90 fe ff ff       	callq  1060 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
    11d0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    11d5:	31 f6                	xor    %esi,%esi
    11d7:	e8 34 03 00 00       	callq  1510 <std::operator==(std::thread::id, std::thread::id)>
    11dc:	84 c0                	test   %al,%al
    11de:	74 3d                	je     121d <main+0xdd>
    11e0:	48 83 c4 28          	add    $0x28,%rsp
    11e4:	31 c0                	xor    %eax,%eax
    11e6:	5b                   	pop    %rbx
    11e7:	5d                   	pop    %rbp
    11e8:	c3                   	retq   
    11e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11f0:	e8 1b fe ff ff       	callq  1010 <__errno_location@plt>
    11f5:	83 38 04             	cmpl   $0x4,(%rax)
    11f8:	75 83                	jne    117d <main+0x3d>
    11fa:	e9 6e ff ff ff       	jmpq   116d <main+0x2d>
    11ff:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1204:	48 89 c3             	mov    %rax,%rbx
    1207:	31 f6                	xor    %esi,%esi
    1209:	c5 f8 77             	vzeroupper 
    120c:	e8 ff 02 00 00       	callq  1510 <std::operator==(std::thread::id, std::thread::id)>
    1211:	84 c0                	test   %al,%al
    1213:	74 08                	je     121d <main+0xdd>
    1215:	48 89 df             	mov    %rbx,%rdi
    1218:	e8 f3 fe ff ff       	callq  1110 <_Unwind_Resume@plt>
    121d:	e8 fe fd ff ff       	callq  1020 <std::terminate()@plt>
    1222:	0f 1f 40 00          	nopl   0x0(%rax)
    1226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    122d:	00 00 00 

0000000000001230 <_GLOBAL__sub_I_run>:
    1230:	48 83 ec 08          	sub    $0x8,%rsp
    1234:	48 8d 3d 61 10 20 00 	lea    0x201061(%rip),%rdi        # 20229c <std::__ioinit>
    123b:	e8 b0 fe ff ff       	callq  10f0 <std::ios_base::Init::Init()@plt>
    1240:	48 8b 3d b1 0d 20 00 	mov    0x200db1(%rip),%rdi        # 201ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
    1247:	48 83 c4 08          	add    $0x8,%rsp
    124b:	48 8d 15 5e 0e 20 00 	lea    0x200e5e(%rip),%rdx        # 2020b0 <__dso_handle>
    1252:	48 8d 35 43 10 20 00 	lea    0x201043(%rip),%rsi        # 20229c <std::__ioinit>
    1259:	e9 42 fe ff ff       	jmpq   10a0 <__cxa_atexit@plt>
    125e:	66 90                	xchg   %ax,%ax

0000000000001260 <_start>:
    1260:	31 ed                	xor    %ebp,%ebp
    1262:	49 89 d1             	mov    %rdx,%r9
    1265:	5e                   	pop    %rsi
    1266:	48 89 e2             	mov    %rsp,%rdx
    1269:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    126d:	50                   	push   %rax
    126e:	54                   	push   %rsp
    126f:	4c 8d 05 4a 05 00 00 	lea    0x54a(%rip),%r8        # 17c0 <__libc_csu_fini>
    1276:	48 8d 0d d3 04 00 00 	lea    0x4d3(%rip),%rcx        # 1750 <__libc_csu_init>
    127d:	48 8d 3d bc fe ff ff 	lea    -0x144(%rip),%rdi        # 1140 <main>
    1284:	ff 15 5e 0d 20 00    	callq  *0x200d5e(%rip)        # 201fe8 <__libc_start_main@GLIBC_2.2.5>
    128a:	f4                   	hlt    
    128b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001290 <deregister_tm_clones>:
    1290:	48 8d 3d 31 0e 20 00 	lea    0x200e31(%rip),%rdi        # 2020c8 <__TMC_LIST__>
    1297:	48 8d 05 d1 0e 20 00 	lea    0x200ed1(%rip),%rax        # 20216f <__TMC_END__+0x7>
    129e:	55                   	push   %rbp
    129f:	48 29 f8             	sub    %rdi,%rax
    12a2:	48 89 e5             	mov    %rsp,%rbp
    12a5:	48 83 f8 0e          	cmp    $0xe,%rax
    12a9:	76 15                	jbe    12c0 <deregister_tm_clones+0x30>
    12ab:	48 8b 05 16 0d 20 00 	mov    0x200d16(%rip),%rax        # 201fc8 <_ITM_deregisterTMCloneTable@LIBITM_1.0>
    12b2:	48 85 c0             	test   %rax,%rax
    12b5:	74 09                	je     12c0 <deregister_tm_clones+0x30>
    12b7:	5d                   	pop    %rbp
    12b8:	ff e0                	jmpq   *%rax
    12ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12c0:	5d                   	pop    %rbp
    12c1:	c3                   	retq   
    12c2:	0f 1f 40 00          	nopl   0x0(%rax)
    12c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    12cd:	00 00 00 

00000000000012d0 <register_tm_clones>:
    12d0:	48 8d 3d f1 0d 20 00 	lea    0x200df1(%rip),%rdi        # 2020c8 <__TMC_LIST__>
    12d7:	48 8d 35 8a 0e 20 00 	lea    0x200e8a(%rip),%rsi        # 202168 <__TMC_END__>
    12de:	55                   	push   %rbp
    12df:	48 29 fe             	sub    %rdi,%rsi
    12e2:	48 89 e5             	mov    %rsp,%rbp
    12e5:	48 c1 fe 03          	sar    $0x3,%rsi
    12e9:	48 89 f0             	mov    %rsi,%rax
    12ec:	48 c1 e8 3f          	shr    $0x3f,%rax
    12f0:	48 01 c6             	add    %rax,%rsi
    12f3:	48 d1 fe             	sar    %rsi
    12f6:	74 18                	je     1310 <register_tm_clones+0x40>
    12f8:	48 8b 05 d9 0c 20 00 	mov    0x200cd9(%rip),%rax        # 201fd8 <_ITM_registerTMCloneTable@LIBITM_1.0>
    12ff:	48 85 c0             	test   %rax,%rax
    1302:	74 0c                	je     1310 <register_tm_clones+0x40>
    1304:	5d                   	pop    %rbp
    1305:	ff e0                	jmpq   *%rax
    1307:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    130e:	00 00 
    1310:	5d                   	pop    %rbp
    1311:	c3                   	retq   
    1312:	0f 1f 40 00          	nopl   0x0(%rax)
    1316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    131d:	00 00 00 

0000000000001320 <__do_global_dtors_aux>:
    1320:	80 3d 69 0f 20 00 00 	cmpb   $0x0,0x200f69(%rip)        # 202290 <completed.6972>
    1327:	75 27                	jne    1350 <__do_global_dtors_aux+0x30>
    1329:	48 83 3d 8f 0c 20 00 	cmpq   $0x0,0x200c8f(%rip)        # 201fc0 <__cxa_finalize@GLIBC_2.2.5>
    1330:	00 
    1331:	55                   	push   %rbp
    1332:	48 89 e5             	mov    %rsp,%rbp
    1335:	74 0c                	je     1343 <__do_global_dtors_aux+0x23>
    1337:	48 8b 3d 72 0d 20 00 	mov    0x200d72(%rip),%rdi        # 2020b0 <__dso_handle>
    133e:	e8 ed fd ff ff       	callq  1130 <.plt.got>
    1343:	e8 48 ff ff ff       	callq  1290 <deregister_tm_clones>
    1348:	5d                   	pop    %rbp
    1349:	c6 05 40 0f 20 00 01 	movb   $0x1,0x200f40(%rip)        # 202290 <completed.6972>
    1350:	f3 c3                	repz retq 
    1352:	0f 1f 40 00          	nopl   0x0(%rax)
    1356:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    135d:	00 00 00 

0000000000001360 <frame_dummy>:
    1360:	48 8d 3d d1 09 20 00 	lea    0x2009d1(%rip),%rdi        # 201d38 <__JCR_END__>
    1367:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    136b:	75 0b                	jne    1378 <frame_dummy+0x18>
    136d:	e9 5e ff ff ff       	jmpq   12d0 <register_tm_clones>
    1372:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1378:	48 8b 05 61 0c 20 00 	mov    0x200c61(%rip),%rax        # 201fe0 <_Jv_RegisterClasses>
    137f:	48 85 c0             	test   %rax,%rax
    1382:	74 e9                	je     136d <frame_dummy+0xd>
    1384:	55                   	push   %rbp
    1385:	48 89 e5             	mov    %rsp,%rbp
    1388:	ff d0                	callq  *%rax
    138a:	5d                   	pop    %rbp
    138b:	e9 40 ff ff ff       	jmpq   12d0 <register_tm_clones>

0000000000001390 <work()>:
    1390:	53                   	push   %rbx
    1391:	31 ff                	xor    %edi,%edi
    1393:	48 83 ec 20          	sub    $0x20,%rsp
    1397:	e8 44 03 00 00       	callq  16e0 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)>
    139c:	bf 01 00 00 00       	mov    $0x1,%edi
    13a1:	48 85 c0             	test   %rax,%rax
    13a4:	0f 85 1e 01 00 00    	jne    14c8 <work()+0x138>
    13aa:	e8 31 03 00 00       	callq  16e0 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)>
    13af:	48 89 c1             	mov    %rax,%rcx
    13b2:	48 85 c0             	test   %rax,%rax
    13b5:	b8 01 00 00 00       	mov    $0x1,%eax
    13ba:	48 0f 45 c1          	cmovne %rcx,%rax
    13be:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    13c3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    13ca:	00 00 
    13cc:	0f 1f 40 00          	nopl   0x0(%rax)
    13d0:	0f b6 05 e1 0c 20 00 	movzbl 0x200ce1(%rip),%eax        # 2020b8 <run>
    13d7:	84 c0                	test   %al,%al
    13d9:	74 66                	je     1441 <work()+0xb1>
    13db:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    13e0:	e8 4b 01 00 00       	callq  1530 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)>
    13e5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    13ea:	a8 01                	test   $0x1,%al
    13ec:	74 62                	je     1450 <work()+0xc0>
    13ee:	bf 10 00 00 00       	mov    $0x10,%edi
    13f3:	e8 d8 fc ff ff       	callq  10d0 <operator new(unsigned long)@plt>
    13f8:	bf 2b 00 00 00       	mov    $0x2b,%edi
    13fd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1402:	31 c0                	xor    %eax,%eax
    1404:	e8 17 fd ff ff       	callq  1120 <_ITM_beginTransaction@plt>
    1409:	a8 02                	test   $0x2,%al
    140b:	0f 85 87 00 00 00    	jne    1498 <work()+0x108>
    1411:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    1416:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    141b:	e8 70 fc ff ff       	callq  1090 <_ITM_WU8@plt>
    1420:	e8 5b fc ff ff       	callq  1080 <_ITM_commitTransaction@plt>
    1425:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    142a:	83 05 67 0e 20 00 01 	addl   $0x1,0x200e67(%rip)        # 202298 <push>
    1431:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1436:	0f b6 05 7b 0c 20 00 	movzbl 0x200c7b(%rip),%eax        # 2020b8 <run>
    143d:	84 c0                	test   %al,%al
    143f:	75 9a                	jne    13db <work()+0x4b>
    1441:	48 83 c4 20          	add    $0x20,%rsp
    1445:	5b                   	pop    %rbx
    1446:	c3                   	retq   
    1447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    144e:	00 00 
    1450:	bf 2b 40 00 00       	mov    $0x402b,%edi
    1455:	31 c0                	xor    %eax,%eax
    1457:	e8 c4 fc ff ff       	callq  1120 <_ITM_beginTransaction@plt>
    145c:	a8 02                	test   $0x2,%al
    145e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1463:	75 4b                	jne    14b0 <work()+0x120>
    1465:	48 85 c0             	test   %rax,%rax
    1468:	74 56                	je     14c0 <work()+0x130>
    146a:	48 89 c7             	mov    %rax,%rdi
    146d:	e8 de fb ff ff       	callq  1050 <_ITM_RU8@plt>
    1472:	48 89 c3             	mov    %rax,%rbx
    1475:	e8 06 fc ff ff       	callq  1080 <_ITM_commitTransaction@plt>
    147a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    147f:	e8 3c fc ff ff       	callq  10c0 <operator delete(void*)@plt>
    1484:	83 05 09 0e 20 00 01 	addl   $0x1,0x200e09(%rip)        # 202294 <pop>
    148b:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    1490:	e9 3b ff ff ff       	jmpq   13d0 <work()+0x40>
    1495:	0f 1f 00             	nopl   (%rax)
    1498:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    149d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14a2:	48 89 10             	mov    %rdx,(%rax)
    14a5:	e8 d6 fb ff ff       	callq  1080 <_ITM_commitTransaction@plt>
    14aa:	e9 76 ff ff ff       	jmpq   1425 <work()+0x95>
    14af:	90                   	nop
    14b0:	48 85 c0             	test   %rax,%rax
    14b3:	74 0b                	je     14c0 <work()+0x130>
    14b5:	48 8b 18             	mov    (%rax),%rbx
    14b8:	eb bb                	jmp    1475 <work()+0xe5>
    14ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    14c0:	31 db                	xor    %ebx,%ebx
    14c2:	eb b1                	jmp    1475 <work()+0xe5>
    14c4:	0f 1f 40 00          	nopl   0x0(%rax)
    14c8:	e8 13 02 00 00       	callq  16e0 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)>
    14cd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    14d2:	e9 ec fe ff ff       	jmpq   13c3 <work()+0x33>
    14d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    14de:	00 00 

00000000000014e0 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::~_State_impl()>:
    14e0:	48 8d 05 69 08 20 00 	lea    0x200869(%rip),%rax        # 201d50 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    14e7:	48 89 07             	mov    %rax,(%rdi)
    14ea:	e9 51 fb ff ff       	jmpq   1040 <std::thread::_State::~_State()@plt>
    14ef:	90                   	nop

00000000000014f0 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::~_State_impl()>:
    14f0:	48 8d 05 59 08 20 00 	lea    0x200859(%rip),%rax        # 201d50 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    14f7:	53                   	push   %rbx
    14f8:	48 89 fb             	mov    %rdi,%rbx
    14fb:	48 89 07             	mov    %rax,(%rdi)
    14fe:	e8 3d fb ff ff       	callq  1040 <std::thread::_State::~_State()@plt>
    1503:	48 89 df             	mov    %rbx,%rdi
    1506:	5b                   	pop    %rbx
    1507:	e9 b4 fb ff ff       	jmpq   10c0 <operator delete(void*)@plt>
    150c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001510 <std::operator==(std::thread::id, std::thread::id)>:
    1510:	48 39 f7             	cmp    %rsi,%rdi
    1513:	0f 94 c0             	sete   %al
    1516:	c3                   	retq   
    1517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    151e:	00 00 

0000000000001520 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>:
    1520:	48 89 f8             	mov    %rdi,%rax
    1523:	c3                   	retq   
    1524:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    152b:	00 00 00 
    152e:	66 90                	xchg   %ax,%ax

0000000000001530 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)>:
    1530:	48 69 ff a7 41 00 00 	imul   $0x41a7,%rdi,%rdi
    1537:	48 ba 05 00 00 00 02 	movabs $0x200000005,%rdx
    153e:	00 00 00 
    1541:	48 89 f8             	mov    %rdi,%rax
    1544:	48 f7 e2             	mul    %rdx
    1547:	48 89 f8             	mov    %rdi,%rax
    154a:	48 29 d0             	sub    %rdx,%rax
    154d:	48 d1 e8             	shr    %rax
    1550:	48 01 d0             	add    %rdx,%rax
    1553:	48 c1 e8 1e          	shr    $0x1e,%rax
    1557:	48 89 c2             	mov    %rax,%rdx
    155a:	48 c1 e2 1f          	shl    $0x1f,%rdx
    155e:	48 29 c2             	sub    %rax,%rdx
    1561:	48 29 d7             	sub    %rdx,%rdi
    1564:	48 89 f8             	mov    %rdi,%rax
    1567:	c3                   	retq   
    1568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    156f:	00 

0000000000001570 <std::_Maybe_wrap_member_pointer<void (*)()>::__do_wrap(void (*&&)())>:
    1570:	48 89 f8             	mov    %rdi,%rax
    1573:	c3                   	retq   
    1574:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    157b:	00 00 00 
    157e:	66 90                	xchg   %ax,%ax

0000000000001580 <std::_Tuple_impl<0ul, void (*)()>::_M_head(std::_Tuple_impl<0ul, void (*)()>&)>:
    1580:	48 89 f8             	mov    %rdi,%rax
    1583:	c3                   	retq   
    1584:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    158b:	00 00 00 
    158e:	66 90                	xchg   %ax,%ax

0000000000001590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>:
    1590:	48 89 f8             	mov    %rdi,%rax
    1593:	c3                   	retq   
    1594:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    159b:	00 00 00 
    159e:	66 90                	xchg   %ax,%ax

00000000000015a0 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>:
    15a0:	48 89 f8             	mov    %rdi,%rax
    15a3:	c3                   	retq   
    15a4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    15ab:	00 00 00 
    15ae:	66 90                	xchg   %ax,%ax

00000000000015b0 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>:
    15b0:	48 89 f8             	mov    %rdi,%rax
    15b3:	c3                   	retq   
    15b4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    15bb:	00 00 00 
    15be:	66 90                	xchg   %ax,%ax

00000000000015c0 <std::thread::thread<void (&)()>(void (&)())>:
    15c0:	41 55                	push   %r13
    15c2:	49 89 fd             	mov    %rdi,%r13
    15c5:	41 54                	push   %r12
    15c7:	55                   	push   %rbp
    15c8:	53                   	push   %rbx
    15c9:	48 83 ec 18          	sub    $0x18,%rsp
    15cd:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    15d4:	48 89 f7             	mov    %rsi,%rdi
    15d7:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    15dc:	e8 3f ff ff ff       	callq  1520 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    15e1:	48 89 c7             	mov    %rax,%rdi
    15e4:	e8 37 ff ff ff       	callq  1520 <void (&std::forward<void (&)()>(std::remove_reference<void (&)()>::type&))()>
    15e9:	48 89 ef             	mov    %rbp,%rdi
    15ec:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    15f1:	e8 7a ff ff ff       	callq  1570 <std::_Maybe_wrap_member_pointer<void (*)()>::__do_wrap(void (*&&)())>
    15f6:	48 89 c7             	mov    %rax,%rdi
    15f9:	e8 92 ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    15fe:	48 89 c7             	mov    %rax,%rdi
    1601:	e8 8a ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1606:	48 89 c7             	mov    %rax,%rdi
    1609:	e8 82 ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    160e:	48 89 c7             	mov    %rax,%rdi
    1611:	e8 7a ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1616:	48 89 e7             	mov    %rsp,%rdi
    1619:	48 8b 00             	mov    (%rax),%rax
    161c:	48 89 04 24          	mov    %rax,(%rsp)
    1620:	e8 7b ff ff ff       	callq  15a0 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    1625:	bf 10 00 00 00       	mov    $0x10,%edi
    162a:	48 89 c3             	mov    %rax,%rbx
    162d:	e8 9e fa ff ff       	callq  10d0 <operator new(unsigned long)@plt>
    1632:	48 89 df             	mov    %rbx,%rdi
    1635:	49 89 c4             	mov    %rax,%r12
    1638:	48 8d 05 11 07 20 00 	lea    0x200711(%rip),%rax        # 201d50 <vtable for std::thread::_State_impl<std::_Bind_simple<void (*())()> >+0x10>
    163f:	49 89 04 24          	mov    %rax,(%r12)
    1643:	e8 58 ff ff ff       	callq  15a0 <std::_Bind_simple<void (*())()>&& std::forward<std::_Bind_simple<void (*())()> >(std::remove_reference<std::_Bind_simple<void (*())()> >::type&)>
    1648:	48 89 c7             	mov    %rax,%rdi
    164b:	e8 30 ff ff ff       	callq  1580 <std::_Tuple_impl<0ul, void (*)()>::_M_head(std::_Tuple_impl<0ul, void (*)()>&)>
    1650:	48 89 c7             	mov    %rax,%rdi
    1653:	e8 38 ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1658:	48 89 c7             	mov    %rax,%rdi
    165b:	e8 30 ff ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1660:	48 89 ef             	mov    %rbp,%rdi
    1663:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    166a:	00 00 
    166c:	48 8b 00             	mov    (%rax),%rax
    166f:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    1674:	e8 37 ff ff ff       	callq  15b0 <std::tuple_element<0ul, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ul, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)>
    1679:	48 8b 15 50 09 20 00 	mov    0x200950(%rip),%rdx        # 201fd0 <pthread_create@GLIBC_2.2.5>
    1680:	48 89 ee             	mov    %rbp,%rsi
    1683:	4c 89 ef             	mov    %r13,%rdi
    1686:	4c 89 20             	mov    %r12,(%rax)
    1689:	48 89 c3             	mov    %rax,%rbx
    168c:	e8 1f fa ff ff       	callq  10b0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
    1691:	48 8b 3b             	mov    (%rbx),%rdi
    1694:	48 85 ff             	test   %rdi,%rdi
    1697:	74 06                	je     169f <std::thread::thread<void (&)()>(void (&)())+0xdf>
    1699:	48 8b 07             	mov    (%rdi),%rax
    169c:	ff 50 08             	callq  *0x8(%rax)
    169f:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    16a6:	48 83 c4 18          	add    $0x18,%rsp
    16aa:	5b                   	pop    %rbx
    16ab:	5d                   	pop    %rbp
    16ac:	41 5c                	pop    %r12
    16ae:	41 5d                	pop    %r13
    16b0:	c3                   	retq   
    16b1:	48 8b 3b             	mov    (%rbx),%rdi
    16b4:	48 89 c5             	mov    %rax,%rbp
    16b7:	48 85 ff             	test   %rdi,%rdi
    16ba:	74 18                	je     16d4 <std::thread::thread<void (&)()>(void (&)())+0x114>
    16bc:	48 8b 07             	mov    (%rdi),%rax
    16bf:	c5 f8 77             	vzeroupper 
    16c2:	ff 50 08             	callq  *0x8(%rax)
    16c5:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    16cc:	48 89 ef             	mov    %rbp,%rdi
    16cf:	e8 3c fa ff ff       	callq  1110 <_Unwind_Resume@plt>
    16d4:	c5 f8 77             	vzeroupper 
    16d7:	eb ec                	jmp    16c5 <std::thread::thread<void (&)()>(void (&)())+0x105>
    16d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000016e0 <unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)>:
    16e0:	48 ba 05 00 00 00 02 	movabs $0x200000005,%rdx
    16e7:	00 00 00 
    16ea:	48 89 f8             	mov    %rdi,%rax
    16ed:	48 f7 e2             	mul    %rdx
    16f0:	48 89 f8             	mov    %rdi,%rax
    16f3:	48 29 d0             	sub    %rdx,%rax
    16f6:	48 d1 e8             	shr    %rax
    16f9:	48 01 d0             	add    %rdx,%rax
    16fc:	48 c1 e8 1e          	shr    $0x1e,%rax
    1700:	48 89 c2             	mov    %rax,%rdx
    1703:	48 c1 e2 1f          	shl    $0x1f,%rdx
    1707:	48 29 c2             	sub    %rax,%rdx
    170a:	48 29 d7             	sub    %rdx,%rdi
    170d:	48 89 f8             	mov    %rdi,%rax
    1710:	c3                   	retq   
    1711:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1718:	00 00 00 
    171b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001720 <std::tuple_element<0ul, std::tuple<void (*)()> >::type& std::get<0ul, void (*)()>(std::tuple<void (*)()>&)>:
    1720:	48 89 f8             	mov    %rdi,%rax
    1723:	c3                   	retq   
    1724:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    172b:	00 00 00 
    172e:	66 90                	xchg   %ax,%ax

0000000000001730 <std::thread::_State_impl<std::_Bind_simple<void (*())()> >::_M_run()>:
    1730:	48 83 ec 08          	sub    $0x8,%rsp
    1734:	48 83 c7 08          	add    $0x8,%rdi
    1738:	e8 e3 ff ff ff       	callq  1720 <std::tuple_element<0ul, std::tuple<void (*)()> >::type& std::get<0ul, void (*)()>(std::tuple<void (*)()>&)>
    173d:	48 89 c7             	mov    %rax,%rdi
    1740:	e8 4b fe ff ff       	callq  1590 <void (*&&std::forward<void (*)()>(std::remove_reference<void (*)()>::type&))()>
    1745:	48 8b 00             	mov    (%rax),%rax
    1748:	48 83 c4 08          	add    $0x8,%rsp
    174c:	ff e0                	jmpq   *%rax
    174e:	66 90                	xchg   %ax,%ax

0000000000001750 <__libc_csu_init>:
    1750:	41 57                	push   %r15
    1752:	41 56                	push   %r14
    1754:	41 89 ff             	mov    %edi,%r15d
    1757:	41 55                	push   %r13
    1759:	41 54                	push   %r12
    175b:	4c 8d 25 be 05 20 00 	lea    0x2005be(%rip),%r12        # 201d20 <__frame_dummy_init_array_entry>
    1762:	55                   	push   %rbp
    1763:	48 8d 2d c6 05 20 00 	lea    0x2005c6(%rip),%rbp        # 201d30 <__init_array_end>
    176a:	53                   	push   %rbx
    176b:	49 89 f6             	mov    %rsi,%r14
    176e:	49 89 d5             	mov    %rdx,%r13
    1771:	4c 29 e5             	sub    %r12,%rbp
    1774:	48 83 ec 08          	sub    $0x8,%rsp
    1778:	48 c1 fd 03          	sar    $0x3,%rbp
    177c:	e8 5f f8 ff ff       	callq  fe0 <_init>
    1781:	48 85 ed             	test   %rbp,%rbp
    1784:	74 20                	je     17a6 <__libc_csu_init+0x56>
    1786:	31 db                	xor    %ebx,%ebx
    1788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    178f:	00 
    1790:	4c 89 ea             	mov    %r13,%rdx
    1793:	4c 89 f6             	mov    %r14,%rsi
    1796:	44 89 ff             	mov    %r15d,%edi
    1799:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    179d:	48 83 c3 01          	add    $0x1,%rbx
    17a1:	48 39 dd             	cmp    %rbx,%rbp
    17a4:	75 ea                	jne    1790 <__libc_csu_init+0x40>
    17a6:	48 83 c4 08          	add    $0x8,%rsp
    17aa:	5b                   	pop    %rbx
    17ab:	5d                   	pop    %rbp
    17ac:	41 5c                	pop    %r12
    17ae:	41 5d                	pop    %r13
    17b0:	41 5e                	pop    %r14
    17b2:	41 5f                	pop    %r15
    17b4:	c3                   	retq   
    17b5:	90                   	nop
    17b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    17bd:	00 00 00 

00000000000017c0 <__libc_csu_fini>:
    17c0:	f3 c3                	repz retq 

Desensamblado de la secci贸n .fini:

00000000000017c4 <_fini>:
    17c4:	48 83 ec 08          	sub    $0x8,%rsp
    17c8:	48 83 c4 08          	add    $0x8,%rsp
    17cc:	c3                   	retq   
